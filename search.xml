<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>python利用文件锁，同时只允许一个实例运行</title>
      <link href="/2018/09/17/python%E5%88%A9%E7%94%A8%E6%96%87%E4%BB%B6%E9%94%81%EF%BC%8C%E5%90%8C%E6%97%B6%E5%8F%AA%E5%85%81%E8%AE%B8%E4%B8%80%E4%B8%AA%E5%AE%9E%E4%BE%8B%E8%BF%90%E8%A1%8C/"/>
      <url>/2018/09/17/python%E5%88%A9%E7%94%A8%E6%96%87%E4%BB%B6%E9%94%81%EF%BC%8C%E5%90%8C%E6%97%B6%E5%8F%AA%E5%85%81%E8%AE%B8%E4%B8%80%E4%B8%AA%E5%AE%9E%E4%BE%8B%E8%BF%90%E8%A1%8C/</url>
      <content type="html"><![CDATA[<h3 id="使用文件锁，支持linux和windows"><a href="#使用文件锁，支持linux和windows" class="headerlink" title="使用文件锁，支持linux和windows"></a>使用文件锁，支持linux和windows</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line">logger = logging</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SingleInstance</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        py_file_path = os.path.abspath(__file__)</span><br><span class="line">        basepath = os.path.dirname(py_file_path)</span><br><span class="line">        self.lockfile = os.path.normpath(basepath + <span class="string">'/'</span> + os.path.basename(__file__) + <span class="string">'.lock'</span>)</span><br><span class="line">        <span class="keyword">if</span> sys.platform == <span class="string">'win32'</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="comment"># file already exists, we try to remove (in case previous execution was interrupted)</span></span><br><span class="line">                <span class="keyword">if</span> os.path.exists(self.lockfile):</span><br><span class="line">                    os.unlink(self.lockfile)</span><br><span class="line"></span><br><span class="line">                self.fd = os.open(self.lockfile, os.O_CREAT | os.O_EXCL | os.O_RDWR)</span><br><span class="line">            <span class="keyword">except</span> OSError <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">if</span> e.errno == <span class="number">13</span>:</span><br><span class="line">                    logger.error(<span class="string">"Another instance is already running, quit."</span>)</span><br><span class="line">                    sys.exit(<span class="number">-1</span>)</span><br><span class="line">                <span class="keyword">raise</span> e</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># non Windows</span></span><br><span class="line">            <span class="keyword">import</span> fcntl</span><br><span class="line"></span><br><span class="line">            self.fp = open(self.lockfile, <span class="string">'w'</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                fcntl.lockf(self.fp, fcntl.LOCK_EX | fcntl.LOCK_NB)</span><br><span class="line">            <span class="keyword">except</span> IOError:</span><br><span class="line">                logger.error(<span class="string">"Another instance is already running, quit."</span>)</span><br><span class="line">                sys.exit(<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    instance = SingleInstance()</span><br><span class="line">    time.sleep(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hbase操作</title>
      <link href="/2018/09/17/hbase%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/09/17/hbase%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h3 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create <span class="string">'table1'</span>, &#123;</span><br><span class="line">        NAME =&gt; <span class="string">'card'</span>, </span><br><span class="line">        DATA_BLOCK_ENCODING =&gt; <span class="string">'NONE'</span>, </span><br><span class="line">        BLOOMFILTER =&gt; <span class="string">'ROWCOL'</span>, </span><br><span class="line">        REPLICATION_SCOPE =&gt; <span class="string">'1'</span>, </span><br><span class="line">        COMPRESSION =&gt; <span class="string">'SNAPPY'</span>, </span><br><span class="line">        VERSIONS =&gt; <span class="string">'1'</span>, </span><br><span class="line">        MIN_VERSIONS =&gt; <span class="string">'0'</span>, </span><br><span class="line">        KEEP_DELETED_CELLS =&gt; <span class="string">'false'</span>, </span><br><span class="line">        BLOCKSIZE =&gt; <span class="string">'65536'</span>, </span><br><span class="line">        IN_MEMORY =&gt; <span class="string">'false'</span>, </span><br><span class="line">        BLOCKCACHE =&gt; <span class="string">'false'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">put <span class="string">'table1'</span>, <span class="string">'rowkey1'</span>, <span class="string">'card:col3'</span>, <span class="string">'value3'</span></span><br><span class="line">get <span class="string">'table1'</span>, <span class="string">'rowkey1'</span>, &#123;COLUMN =&gt; [<span class="string">'card:col1'</span>, <span class="string">'card:col2'</span>]&#125;</span><br><span class="line">scan <span class="string">'table1'</span></span><br></pre></td></tr></table></figure><h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"test"</span>);</span><br><span class="line"></span><br><span class="line">        Configuration conf = HBaseConfiguration.create();</span><br><span class="line">        conf.set(<span class="string">"hbase.master"</span>, <span class="string">"172.17.161.5:60000"</span>);</span><br><span class="line">        conf.set(<span class="string">"hbase.zookeeper.property.clientport"</span>, <span class="string">"2181"</span>);</span><br><span class="line">        conf.set(<span class="string">"hbase.zookeeper.quorum"</span>, <span class="string">"172.17.161.5"</span>);</span><br><span class="line">        conf.set(<span class="string">"zookeeper.znode.parent"</span>, <span class="string">"/hbase-rpt"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Connection connection = ConnectionFactory.createConnection(conf);</span><br><span class="line">            Admin admin = connection.getAdmin();</span><br><span class="line"></span><br><span class="line">            TableName[] names = admin.listTableNames();</span><br><span class="line">            <span class="keyword">for</span> (TableName tableName : names) &#123;</span><br><span class="line">                logger.info(<span class="string">"Table Name is : "</span> + tableName.getNameAsString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hdfs设置账号权限</title>
      <link href="/2018/09/17/hdfs%E8%AE%BE%E7%BD%AE%E8%B4%A6%E5%8F%B7%E6%9D%83%E9%99%90/"/>
      <url>/2018/09/17/hdfs%E8%AE%BE%E7%BD%AE%E8%B4%A6%E5%8F%B7%E6%9D%83%E9%99%90/</url>
      <content type="html"><![CDATA[<h3 id="设置目录的默认权限"><a href="#设置目录的默认权限" class="headerlink" title="设置目录的默认权限"></a>设置目录的默认权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置目录的默认权限，这样用户新创建的目录和子目录就会自动有权限</span></span><br><span class="line">hdfs dfs -setfacl -R -m default:group:group1:rwx /hive-dw/db1</span><br><span class="line"><span class="comment"># 设置已有目录的权限</span></span><br><span class="line">hdfs dfs -setfacl -R -m group:group1:rwx /hive-dw/db1</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>centos开启ipv6</title>
      <link href="/2018/09/17/centos%E5%BC%80%E5%90%AFipv6/"/>
      <url>/2018/09/17/centos%E5%BC%80%E5%90%AFipv6/</url>
      <content type="html"><![CDATA[<h3 id="编辑-etc-sysconfig-network-scripts-ifcfg-eth0，添加"><a href="#编辑-etc-sysconfig-network-scripts-ifcfg-eth0，添加" class="headerlink" title="编辑/etc/sysconfig/network-scripts/ifcfg-eth0，添加"></a>编辑/etc/sysconfig/network-scripts/ifcfg-eth0，添加</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6ADDR=primary_ipv6_address/64</span><br><span class="line">IPV6_DEFAULTGW=ipv6_gateway</span><br><span class="line">IPV6_AUTOCONF=no</span><br><span class="line">DNS1=2001:4860:4860::8844</span><br><span class="line">DNS2=2001:4860:4860::8888</span><br><span class="line">DNS3=209.244.0.3</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping6 2001:4860:4860::8888</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.digitalocean.com/community/tutorials/how-to-enable-ipv6-for-digitalocean-droplets</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nodejs npm包安装</title>
      <link href="/2018/05/27/nodejs-npm%E5%8C%85%E5%AE%89%E8%A3%85/"/>
      <url>/2018/05/27/nodejs-npm%E5%8C%85%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="设置下载镜像地址"><a href="#设置下载镜像地址" class="headerlink" title="设置下载镜像地址"></a>设置下载镜像地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 国内地址</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.cnpmjs.org</span><br><span class="line"><span class="comment"># 淘宝npm代理</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line"><span class="comment"># 安装包错误 npm ERR! Unexpected end of JSON input while parsing near...</span></span><br><span class="line"><span class="comment"># 则切换回国内代理或者清除缓存</span></span><br><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure><h3 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> proxy http://127.0.0.1:1080</span><br><span class="line">npm config delete proxy</span><br></pre></td></tr></table></figure><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装包时提示 MSBUILD : error MSB3428: 未能加载 Visual C++ 组件“VCBuild.exe”</span></span><br><span class="line"><span class="comment"># 则需要以管理员权限运行</span></span><br><span class="line">npm install --global windows-build-tools</span><br><span class="line">npm install -g node-gyp</span><br></pre></td></tr></table></figure><h3 id="安装sass"><a href="#安装sass" class="headerlink" title="安装sass"></a>安装sass</h3><p>binding.node 下载地址：<a href="https://github.com/sass/node-sass/releases/" target="_blank" rel="noopener">https://github.com/sass/node-sass/releases/</a><br>安装方法：</p><ul><li>set SASS_BINARY_SITE=<a href="https://npm.taobao.org/mirrors/node-sass/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/node-sass/</a> &amp;&amp; npm install node-sass</li><li>set SASS_BINARY_PATH=D:\code\nodejs\bin\win32-x64-64_binding.node &amp;&amp; npm install node-sass</li></ul>]]></content>
      
      
    </entry>
    
    <entry>
      <title>elasticsearch-sql设置返回的size</title>
      <link href="/2018/05/20/elasticsearch-sql%E8%AE%BE%E7%BD%AE%E8%BF%94%E5%9B%9E%E7%9A%84size/"/>
      <url>/2018/05/20/elasticsearch-sql%E8%AE%BE%E7%BD%AE%E8%BF%94%E5%9B%9E%E7%9A%84size/</url>
      <content type="html"><![CDATA[<p>elasticsearch-sql 默认返回的size是200，10。</p><p>可以在查询的时候显式设置size：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  <span class="keyword">SUM</span>(succ) <span class="keyword">AS</span> s <span class="keyword">FROM</span> test1 <span class="keyword">GROUP</span> <span class="keyword">BY</span> terms(<span class="keyword">field</span>=<span class="string">'domain'</span>,<span class="keyword">size</span>=<span class="string">'1000'</span>,<span class="keyword">alias</span>=<span class="string">'domain'</span>), terms(<span class="keyword">field</span>=<span class="string">'server'</span>,<span class="keyword">size</span>=<span class="string">'1000'</span>,<span class="keyword">alias</span>=<span class="string">'server'</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>elasticsearch常用操作</title>
      <link href="/2018/05/20/elasticsearch%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/05/20/elasticsearch%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h3 id="使用aggregations，排序必须要开启fielddata"><a href="#使用aggregations，排序必须要开启fielddata" class="headerlink" title="使用aggregations，排序必须要开启fielddata"></a>使用aggregations，排序必须要开启fielddata</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PUT my_index/_mapping/my_type</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;my_field&quot;: &#123; </span><br><span class="line">      &quot;type&quot;:     &quot;text&quot;,</span><br><span class="line">      &quot;fielddata&quot;: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="安装，参数设置"><a href="#安装，参数设置" class="headerlink" title="安装，参数设置"></a>安装，参数设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 内核设置</span></span><br><span class="line">vm.swappiness=1</span><br><span class="line">vm.max_map_count=262144</span><br><span class="line"><span class="comment"># 内存设置</span></span><br><span class="line"><span class="built_in">export</span> ES_HEAP_SIZE=8g</span><br><span class="line"><span class="comment"># 配置文件</span></span><br><span class="line">path.data: /home/<span class="built_in">stat</span>/elasticsearch-6.1.1/data</span><br><span class="line">path.logs: /home/<span class="built_in">stat</span>/elasticsearch-6.1.1/logs</span><br><span class="line">indices.fielddata.cache.size:  20%</span><br><span class="line"><span class="comment"># 外部访问</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line"><span class="comment"># [1]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</span></span><br><span class="line"><span class="comment"># [2]: max number of threads [1024] for user [stat] is too low, increase to at least [4096]</span></span><br><span class="line"><span class="comment"># [3]: system call filters failed to install; check the logs and fix your configuration or disable system call filters at your own risk</span></span><br><span class="line">修改 /etc/security/limits.conf</span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 4096</span><br><span class="line">* hard nproc 4096</span><br><span class="line">修改 /etc/security/limits.d/90-nproc.conf</span><br><span class="line">* soft nproc 4096</span><br><span class="line">要在Memory下面修改增加:</span><br><span class="line">bootstrap.memory_lock: <span class="literal">false</span></span><br><span class="line">bootstrap.system_call_filter: <span class="literal">false</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="开启fielddata"><a href="#开启fielddata" class="headerlink" title="开启fielddata"></a>开启fielddata</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">PUT http://127.0.0.1:9200/_template/template_test</span><br><span class="line">&#123;</span><br><span class="line">    &quot;index_patterns&quot;: [&quot;test*&quot;],</span><br><span class="line">    &quot;mappings&quot;: &#123;</span><br><span class="line">        &quot;default&quot;: &#123;</span><br><span class="line">          &quot;_source&quot;: &#123;</span><br><span class="line">            &quot;enabled&quot;: true</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;properties&quot;: &#123;</span><br><span class="line">          &quot;@timestamp&quot;: &#123;</span><br><span class="line">              &quot;type&quot;:   &quot;date&quot;,</span><br><span class="line">              &quot;format&quot;: &quot;epoch_millis&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;host&quot;: &#123; </span><br><span class="line">              &quot;type&quot;:     &quot;text&quot;,</span><br><span class="line">              &quot;fielddata&quot;: true</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;server&quot;: &#123; </span><br><span class="line">              &quot;type&quot;:     &quot;text&quot;,</span><br><span class="line">              &quot;fielddata&quot;: true</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="不分词的string"><a href="#不分词的string" class="headerlink" title="不分词的string"></a>不分词的string</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;domain&quot;: &#123; </span><br><span class="line">    &quot;type&quot;:     &quot;keyword&quot;,</span><br><span class="line">    &quot;doc_values&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="允许跨域访问"><a href="#允许跨域访问" class="headerlink" title="允许跨域访问"></a>允许跨域访问</h3><p>解决Response to preflight request doesn’t pass access control check: No ‘Access-Control-Allow-Origin’ header…<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http.cors.enabled: true  </span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br></pre></td></tr></table></figure></p><h3 id="设置副本，字段默认类型，匹配，模版"><a href="#设置副本，字段默认类型，匹配，模版" class="headerlink" title="设置副本，字段默认类型，匹配，模版"></a>设置副本，字段默认类型，匹配，模版</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">POST http://127.0.0.1:9200/_template/template_metrics</span><br><span class="line">&#123;</span><br><span class="line">    &quot;index_patterns&quot;:[</span><br><span class="line">        &quot;metrics-*&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;settings&quot;:&#123;</span><br><span class="line">        &quot;number_of_shards&quot;:3,</span><br><span class="line">        &quot;number_of_replicas&quot;:&quot;1&quot;,</span><br><span class="line">        &quot;refresh_interval&quot;:&quot;30s&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;mappings&quot;:&#123;</span><br><span class="line">        &quot;_default_&quot;:&#123;</span><br><span class="line">            &quot;_all&quot;:&#123;</span><br><span class="line">                &quot;enabled&quot;:false</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;_source&quot;:&#123;</span><br><span class="line">                &quot;enabled&quot;:true</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;dynamic_templates&quot;:[</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;template_string&quot;:&#123;</span><br><span class="line">                        &quot;match_mapping_type&quot;:&quot;string&quot;,</span><br><span class="line">                        &quot;mapping&quot;:&#123;</span><br><span class="line">                            &quot;type&quot;:&quot;keyword&quot;,</span><br><span class="line">                            &quot;doc_values&quot;:true,</span><br><span class="line">                            &quot;norms&quot;:false</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;properties&quot;:&#123;</span><br><span class="line">                &quot;@timestamp&quot;:&#123;</span><br><span class="line">                    &quot;type&quot;:&quot;date&quot;,</span><br><span class="line">                    &quot;format&quot;:&quot;epoch_millis&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mongodb常用操作</title>
      <link href="/2018/05/20/mongodb%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/05/20/mongodb%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h3 id="备份-恢复"><a href="#备份-恢复" class="headerlink" title="备份,恢复"></a>备份,恢复</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mongodump -h127.0.0.1:27017 -o ./dump</span><br><span class="line">mongorestore -h 127.0.0.1:27017 ./dump</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 可以导出json或csv</span></span><br><span class="line">mongoexport   -h 127.0.0.1 --db tb_page --collection tb_page --<span class="built_in">type</span> json -o tb_page.json</span><br><span class="line">mongoimport -h 127.0.0.1 --db tb_page --collection tb_page --<span class="built_in">type</span> json --mode upsert --file tb_page.json</span><br></pre></td></tr></table></figure><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.update(&#123;<span class="string">"_id"</span>: <span class="string">"id1"</span>&#125;, &#123;<span class="string">"<span class="variable">$set</span>"</span>: &#123;<span class="string">"groups"</span>: []&#125;&#125;)</span><br></pre></td></tr></table></figure><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.products.insert( &#123; item: <span class="string">"card"</span>, qty: 15 &#125; )</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="列表元素追加"><a href="#列表元素追加" class="headerlink" title="列表元素追加"></a>列表元素追加</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 追加单个元素</span></span><br><span class="line">db.inventory.update(</span><br><span class="line">   &#123; _id: 1 &#125;,</span><br><span class="line">   &#123; <span class="variable">$addToSet</span>: &#123; tags: <span class="string">"camera"</span>  &#125; &#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 追加多个元素</span></span><br><span class="line">db.inventory.update(</span><br><span class="line">   &#123; _id: 2 &#125;,</span><br><span class="line">   &#123; <span class="variable">$addToSet</span>: &#123; tags: &#123; <span class="variable">$each</span>: [ <span class="string">"camera"</span>, <span class="string">"electronics"</span>, <span class="string">"accessories"</span> ] &#125; &#125; &#125;</span><br><span class="line"> )</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>plotly使用渲染图标chart</title>
      <link href="/2018/05/20/plotly%E4%BD%BF%E7%94%A8%E6%B8%B2%E6%9F%93%E5%9B%BE%E6%A0%87chart/"/>
      <url>/2018/05/20/plotly%E4%BD%BF%E7%94%A8%E6%B8%B2%E6%9F%93%E5%9B%BE%E6%A0%87chart/</url>
      <content type="html"><![CDATA[<h3 id="使用bottle"><a href="#使用bottle" class="headerlink" title="使用bottle"></a>使用bottle</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> bottle <span class="keyword">import</span> route, run, template, Bottle, response</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> plotly <span class="keyword">import</span> utils</span><br><span class="line"><span class="keyword">import</span> plotly.graph_objs <span class="keyword">as</span> go</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> requests.compat <span class="keyword">import</span> json <span class="keyword">as</span> _json</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> influxdb <span class="keyword">import</span> DataFrameClient</span><br><span class="line"> </span><br><span class="line">app = Bottle()</span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.hook('after_request')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enable_cors</span><span class="params">()</span>:</span></span><br><span class="line">    response.headers[<span class="string">'Access-Control-Allow-Origin'</span>] = <span class="string">'*'</span></span><br><span class="line">    response.headers[<span class="string">'Access-Control-Allow-Methods'</span>] = <span class="string">'GET, POST, PUT, OPTIONS'</span></span><br><span class="line">    response.headers[<span class="string">'Access-Control-Allow-Headers'</span>] = <span class="string">'Origin, Accept, Content-Type, X-Requested-With, X-CSRF-Token'</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route('/data')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    client = DataFrameClient(<span class="string">'127.0.0.1'</span>, <span class="string">'8086'</span>, database=<span class="string">'dc'</span>)</span><br><span class="line">    res = client.query(<span class="string">'select sum(succ), sum(fail) from p group by host limit 10'</span>)</span><br><span class="line"> </span><br><span class="line">    data = []</span><br><span class="line">    <span class="keyword">for</span> metric, df <span class="keyword">in</span> res.items():</span><br><span class="line">        <span class="keyword">print</span> df</span><br><span class="line">        trace = go.Bar(</span><br><span class="line">            x=df[df.columns[<span class="number">0</span>]],</span><br><span class="line">            y=df[df.columns[<span class="number">1</span>]],</span><br><span class="line">            name=str(metric),</span><br><span class="line">        )</span><br><span class="line">        data.append(trace)</span><br><span class="line">    layout = go.Layout()</span><br><span class="line">    data_json = _json.dumps(data, cls=utils.PlotlyJSONEncoder)</span><br><span class="line">    layout_json = _json.dumps(layout, cls=utils.PlotlyJSONEncoder)</span><br><span class="line">    data_dict = json.loads(data_json)</span><br><span class="line">    layout_dict = json.loads(layout_json)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">'records'</span>: data_dict, <span class="string">'layout'</span>: layout_dict&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route('/pie')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pie</span><span class="params">()</span>:</span></span><br><span class="line">    client = DataFrameClient(<span class="string">'127.0.0.1'</span>, <span class="string">'8086'</span>, database=<span class="string">'dc'</span>)</span><br><span class="line">    res = client.query(<span class="string">'select sum(succ), sum(fail) from p group by host limit 10'</span>)</span><br><span class="line"> </span><br><span class="line">    data = []</span><br><span class="line">    labels = []</span><br><span class="line">    pds = []</span><br><span class="line">    <span class="keyword">for</span> metric, df <span class="keyword">in</span> res.items():</span><br><span class="line">        <span class="keyword">print</span> metric, df</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'---------'</span>, df.columns, df.columns.values</span><br><span class="line">        labels.append(str(metric) + df.columns[<span class="number">0</span>])</span><br><span class="line">        labels.append(str(metric) + df.columns[<span class="number">1</span>])</span><br><span class="line">        pds.append(df[df.columns[<span class="number">0</span>]])</span><br><span class="line">        pds.append(df[df.columns[<span class="number">1</span>]])</span><br><span class="line">    trace = go.Pie(</span><br><span class="line">        labels=labels,</span><br><span class="line">        values=pd.concat(pds),</span><br><span class="line">        name=str(metric),</span><br><span class="line">    )</span><br><span class="line">    data.append(trace)</span><br><span class="line">    layout = go.Layout()</span><br><span class="line">    data_json = _json.dumps(data, cls=utils.PlotlyJSONEncoder)</span><br><span class="line">    layout_json = _json.dumps(layout, cls=utils.PlotlyJSONEncoder)</span><br><span class="line">    data_dict = json.loads(data_json)</span><br><span class="line">    layout_dict = json.loads(layout_json)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">'records'</span>: data_dict, <span class="string">'layout'</span>: layout_dict&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route('/line')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">line</span><span class="params">()</span>:</span></span><br><span class="line">    client = DataFrameClient(<span class="string">'127.0.0.1'</span>, <span class="string">'8086'</span>, database=<span class="string">'dc'</span>)</span><br><span class="line">    res = client.query(<span class="string">'select sum(succ), sum(fail) from p where time &gt; now() - 1d and succ &gt; 0 group by time(1h) limit 10'</span>)</span><br><span class="line"> </span><br><span class="line">    data = []</span><br><span class="line">    <span class="keyword">for</span> metric, df <span class="keyword">in</span> res.items():</span><br><span class="line">        <span class="keyword">print</span> metric, df</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'---------'</span>, df.index</span><br><span class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> df.columns.values:</span><br><span class="line">            trace = go.Scatter(</span><br><span class="line">                x=df.index,</span><br><span class="line">                y=df[col],</span><br><span class="line">                name=str(metric),</span><br><span class="line">            )</span><br><span class="line">            data.append(trace)</span><br><span class="line">    layout = go.Layout()</span><br><span class="line">    data_json = _json.dumps(data, cls=utils.PlotlyJSONEncoder)</span><br><span class="line">    layout_json = _json.dumps(layout, cls=utils.PlotlyJSONEncoder)</span><br><span class="line">    data_dict = json.loads(data_json)</span><br><span class="line">    layout_dict = json.loads(layout_json)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">'records'</span>: data_dict, <span class="string">'layout'</span>: layout_dict&#125;</span><br><span class="line"> </span><br><span class="line">run(app, host=<span class="string">'localhost'</span>, port=<span class="number">8080</span>, debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://code.jquery.com/jquery-3.2.1.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.plot.ly/plotly-latest.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"plot"</span> <span class="attr">style</span>=<span class="string">"width:90%;height:600px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"plot_query"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">makeplot</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            url: <span class="string">'http://127.0.0.1:8080/pie'</span>,</span></span><br><span class="line"><span class="undefined">            data: &#123;</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="javascript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="javascript">            success: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(result);</span></span><br><span class="line"><span class="javascript">                <span class="comment">//result = JSON.parse(result);</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(result.records);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(result.layout);</span></span><br><span class="line"><span class="undefined">                makePlotly(result.query, result.records, result.layout);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">"plot_query"</span>).innerHTML = result.query;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined"> </span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">makePlotly</span>(<span class="params">title,  traces, layout</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> plotDiv = <span class="built_in">document</span>.getElementById(<span class="string">"plot"</span>);</span></span><br><span class="line"><span class="javascript">        Plotly.newPlot(<span class="string">'plot'</span>, traces, layout);</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined"> </span></span><br><span class="line"><span class="undefined">    makeplot();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>django解决ajax提交时的csrf跨域问题</title>
      <link href="/2018/05/20/django%E8%A7%A3%E5%86%B3ajax%E6%8F%90%E4%BA%A4%E6%97%B6%E7%9A%84csrf%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
      <url>/2018/05/20/django%E8%A7%A3%E5%86%B3ajax%E6%8F%90%E4%BA%A4%E6%97%B6%E7%9A%84csrf%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>在js中添加代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// using jQuery</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> cookieValue = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">document</span>.cookie &amp;&amp; <span class="built_in">document</span>.cookie !== <span class="string">''</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> cookies = <span class="built_in">document</span>.cookie.split(<span class="string">';'</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cookies.length; i++) &#123;</span><br><span class="line">                <span class="keyword">var</span> cookie = jQuery.trim(cookies[i]);</span><br><span class="line">                <span class="comment">// Does this cookie string begin with the name we want?</span></span><br><span class="line">                <span class="keyword">if</span> (cookie.substring(<span class="number">0</span>, name.length + <span class="number">1</span>) === (name + <span class="string">'='</span>)) &#123;</span><br><span class="line">                    cookieValue = <span class="built_in">decodeURIComponent</span>(cookie.substring(name.length + <span class="number">1</span>));</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cookieValue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> csrftoken = getCookie(<span class="string">'csrftoken'</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">csrfSafeMethod</span>(<span class="params">method</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// these HTTP methods do not require CSRF protection</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="regexp">/^(GET|HEAD|OPTIONS|TRACE)$/</span>.test(method));</span><br><span class="line">    &#125;</span><br><span class="line">    $.ajaxSetup(&#123;</span><br><span class="line">        beforeSend: <span class="function"><span class="keyword">function</span>(<span class="params">xhr, settings</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!csrfSafeMethod(settings.type) &amp;&amp; !<span class="keyword">this</span>.crossDomain) &#123;</span><br><span class="line">                xhr.setRequestHeader(<span class="string">"X-CSRFToken"</span>, csrftoken);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python bottle解决跨域问题</title>
      <link href="/2018/05/20/python-bottle%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
      <url>/2018/05/20/python-bottle%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="同意跨域"><a href="#同意跨域" class="headerlink" title="同意跨域"></a>同意跨域</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bottle <span class="keyword">import</span> route, run, template, Bottle, response</span><br><span class="line"> </span><br><span class="line">app = Bottle()</span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.hook('after_request')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enable_cors</span><span class="params">()</span>:</span></span><br><span class="line">    response.headers[<span class="string">'Access-Control-Allow-Origin'</span>] = <span class="string">'*'</span></span><br><span class="line">    response.headers[<span class="string">'Access-Control-Allow-Methods'</span>] = <span class="string">'GET, POST, PUT, OPTIONS'</span></span><br><span class="line">    response.headers[<span class="string">'Access-Control-Allow-Headers'</span>] = <span class="string">'Origin, Accept, Content-Type, X-Requested-With, X-CSRF-Token'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>django使用pymysql访问mysql</title>
      <link href="/2018/05/20/django%E4%BD%BF%E7%94%A8pymysql%E8%AE%BF%E9%97%AEmysql/"/>
      <url>/2018/05/20/django%E4%BD%BF%E7%94%A8pymysql%E8%AE%BF%E9%97%AEmysql/</url>
      <content type="html"><![CDATA[<h3 id="在manage-py和wsgi-py顶部增加代码"><a href="#在manage-py和wsgi-py顶部增加代码" class="headerlink" title="在manage.py和wsgi.py顶部增加代码"></a>在manage.py和wsgi.py顶部增加代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">pymysql.install_as_MySQLdb()</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python出现证书错误 CERTIFICATE_VERIFY_FAILED</title>
      <link href="/2018/05/20/python%E5%87%BA%E7%8E%B0%E8%AF%81%E4%B9%A6%E9%94%99%E8%AF%AF-CERTIFICATE-VERIFY-FAILED/"/>
      <url>/2018/05/20/python%E5%87%BA%E7%8E%B0%E8%AF%81%E4%B9%A6%E9%94%99%E8%AF%AF-CERTIFICATE-VERIFY-FAILED/</url>
      <content type="html"><![CDATA[<h3 id="django-cas或其它python程序，出现错误-CERTIFICATE-VERIFY-FAILED"><a href="#django-cas或其它python程序，出现错误-CERTIFICATE-VERIFY-FAILED" class="headerlink" title="django-cas或其它python程序，出现错误 CERTIFICATE_VERIFY_FAILED"></a>django-cas或其它python程序，出现错误 CERTIFICATE_VERIFY_FAILED</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed</span><br><span class="line"> </span><br><span class="line"># 增加代码，不检验自签名证书</span><br><span class="line">import ssl</span><br><span class="line">ssl._create_default_https_context = ssl._create_unverified_context</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python 安装pip</title>
      <link href="/2018/05/20/python-%E5%AE%89%E8%A3%85pip/"/>
      <url>/2018/05/20/python-%E5%AE%89%E8%A3%85pip/</url>
      <content type="html"><![CDATA[<h3 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class="line">python get-pip.py</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>git基本操作</title>
      <link href="/2018/05/20/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/05/20/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h3 id="clone远端项目"><a href="#clone远端项目" class="headerlink" title="clone远端项目"></a>clone远端项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/jquery/jquery.git</span><br><span class="line">git <span class="built_in">clone</span> username@host:/path/to/repository</span><br></pre></td></tr></table></figure><h3 id="远程主机"><a href="#远程主机" class="headerlink" title="远程主机"></a>远程主机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆版本库的时候，所使用的远程主机自动被Git命名为origin</span></span><br><span class="line">git remote -v</span><br><span class="line"><span class="comment"># 将你的仓库连接到某个远程服务器</span></span><br><span class="line">git remote add origin &lt;server&gt;</span><br></pre></td></tr></table></figure><h3 id="提交，拉取"><a href="#提交，拉取" class="headerlink" title="提交，拉取"></a>提交，拉取</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意，分支写法是&lt;来源地&gt;:&lt;目的地&gt;</span></span><br><span class="line"><span class="comment"># git fetch &lt;远程主机名&gt; &lt;分支名&gt;，使用"远程主机名/分支名"读取。比如origin主机的master：origin/master</span></span><br><span class="line">git fetch origin master</span><br><span class="line">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br><span class="line">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 合并分支</span></span><br><span class="line">git merge &lt;branch&gt;</span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">git branch -a</span><br><span class="line"><span class="comment"># 新建</span></span><br><span class="line">git checkout -b branch_1</span><br><span class="line"><span class="comment"># 切换</span></span><br><span class="line">git checkout master</span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">git branch -d branch_2</span><br><span class="line"><span class="comment"># 差异</span></span><br><span class="line">git diff branch_1 branch_2</span><br></pre></td></tr></table></figure><h3 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 替换掉本地改动</span></span><br><span class="line">git checkout -- &lt;filename&gt;</span><br><span class="line"><span class="comment"># 丢弃本地的所有改动与提交，获取服务器最新的版本</span></span><br><span class="line">git fetch origin</span><br><span class="line">git reset --hard origin/master</span><br></pre></td></tr></table></figure><h3 id="历史记录"><a href="#历史记录" class="headerlink" title="历史记录"></a>历史记录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>spark 提交任务 python pyspark</title>
      <link href="/2018/05/20/spark-%E6%8F%90%E4%BA%A4%E4%BB%BB%E5%8A%A1-python-pyspark/"/>
      <url>/2018/05/20/spark-%E6%8F%90%E4%BA%A4%E4%BB%BB%E5%8A%A1-python-pyspark/</url>
      <content type="html"><![CDATA[<h3 id="spark-submit"><a href="#spark-submit" class="headerlink" title="spark-submit"></a>spark-submit</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spark-submit --master yarn --deploy-mode cluster --queue q1 --num-executors 1 scripy.py</span><br></pre></td></tr></table></figure><h3 id="pyspark"><a href="#pyspark" class="headerlink" title="pyspark"></a>pyspark</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process</span><span class="params">(rows)</span>:</span></span><br><span class="line">    content = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">        content += b64encode(row.url)</span><br><span class="line">    <span class="keyword">return</span> [content]</span><br><span class="line">     </span><br><span class="line">conf = SparkConf().setAppName(<span class="string">'PoliceHive2Xml'</span>)</span><br><span class="line">spark_context = SparkContext(conf=conf)</span><br><span class="line">hive_context = HiveContext(spark_context)</span><br><span class="line">sql = <span class="string">"select * from table where dayno=20170807 limit 1000"</span></span><br><span class="line">data_frame = hive_context.sql(sql)</span><br><span class="line">hdfs_filepath = get_hdfs_filepath(table_name, zip_file_name)</span><br><span class="line">data_frame.mapPartitions(process).saveAsTextFile(hdfs_filepath)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python执行shell命令</title>
      <link href="/2018/05/20/python%E6%89%A7%E8%A1%8Cshell%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/05/20/python%E6%89%A7%E8%A1%8Cshell%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h3 id="popen"><a href="#popen" class="headerlink" title="popen"></a>popen</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_command_execute</span><span class="params">(command_s)</span>:</span></span><br><span class="line">    <span class="string">"""执行命令，例如command_s=['ls', '-al']"""</span></span><br><span class="line">    sp = Popen(command_s, stdout=PIPE, stderr=STDOUT, close_fds=<span class="keyword">True</span>)</span><br><span class="line">    output_content = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> iter(sp.stdout.readline, <span class="string">b''</span>):</span><br><span class="line">        output_content += line</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> len(output_content) &gt; <span class="number">1024</span> * <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    sp.wait()</span><br><span class="line">    <span class="keyword">return</span> int(sp.returncode), output_content</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux有序查看进程打开的文件描述符数量</title>
      <link href="/2018/05/20/linux%E6%9C%89%E5%BA%8F%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E6%89%93%E5%BC%80%E7%9A%84%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6%E6%95%B0%E9%87%8F/"/>
      <url>/2018/05/20/linux%E6%9C%89%E5%BA%8F%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E6%89%93%E5%BC%80%E7%9A%84%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6%E6%95%B0%E9%87%8F/</url>
      <content type="html"><![CDATA[<h3 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -n | awk <span class="string">'&#123;print $2&#125;'</span>| sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>echarts定时刷新数据引起内存泄漏的解决方法</title>
      <link href="/2018/05/20/echarts%E5%AE%9A%E6%97%B6%E5%88%B7%E6%96%B0%E6%95%B0%E6%8D%AE%E5%BC%95%E8%B5%B7%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2018/05/20/echarts%E5%AE%9A%E6%97%B6%E5%88%B7%E6%96%B0%E6%95%B0%E6%8D%AE%E5%BC%95%E8%B5%B7%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h3 id="先销毁，再更新"><a href="#先销毁，再更新" class="headerlink" title="先销毁，再更新"></a>先销毁，再更新</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chart = echarts.getInstanceByDom(<span class="built_in">document</span>.getElementById(chart_id));</span><br><span class="line">echarts.dispose(chart);</span><br><span class="line">chart = echarts.init(<span class="built_in">document</span>.getElementById(chart_id));</span><br><span class="line">chart.setOption(option);</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python xml,html转义字符</title>
      <link href="/2018/05/20/python-xml-html%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/"/>
      <url>/2018/05/20/python-xml-html%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</url>
      <content type="html"><![CDATA[<h3 id="xml转义字符"><a href="#xml转义字符" class="headerlink" title="xml转义字符"></a>xml转义字符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> xml.sax.saxutils <span class="keyword">import</span> escape</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xmlescape</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        data = <span class="string">''</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="keyword">not</span> isinstance(data, str):</span><br><span class="line">        data = str(data)</span><br><span class="line">    <span class="keyword">return</span> escape(data, entities=&#123;<span class="string">"'"</span>: <span class="string">"&amp;apos;"</span>, <span class="string">'"'</span>: <span class="string">"&amp;quot;"</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="html转义字符"><a href="#html转义字符" class="headerlink" title="html转义字符"></a>html转义字符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">html_escape</span><span class="params">(s)</span>:</span></span><br><span class="line">    htmlcodes = (</span><br><span class="line">        (<span class="string">'&amp;'</span>, <span class="string">'&amp;amp;'</span>),</span><br><span class="line">        (<span class="string">"'"</span>, <span class="string">'&amp;#39;'</span>),</span><br><span class="line">        (<span class="string">'"'</span>, <span class="string">'&amp;quot;'</span>),</span><br><span class="line">        (<span class="string">'&gt;'</span>, <span class="string">'&amp;gt;'</span>),</span><br><span class="line">        (<span class="string">'&lt;'</span>, <span class="string">'&amp;lt;'</span>),</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">for</span> code <span class="keyword">in</span> htmlcodes:</span><br><span class="line">        s = s.replace(code[<span class="number">0</span>], code[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python 序列化json 包含中文</title>
      <link href="/2018/05/20/python-%E5%BA%8F%E5%88%97%E5%8C%96json-%E5%8C%85%E5%90%AB%E4%B8%AD%E6%96%87/"/>
      <url>/2018/05/20/python-%E5%BA%8F%E5%88%97%E5%8C%96json-%E5%8C%85%E5%90%AB%E4%B8%AD%E6%96%87/</url>
      <content type="html"><![CDATA[<p>包含中文<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">html_dict = &#123;<span class="string">'key'</span>: <span class="string">'value'</span>&#125;</span><br><span class="line">json_str = json.dumps(html_dict, ensure_ascii=<span class="keyword">False</span>, encoding=<span class="string">'utf-8'</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>grafana安装使用</title>
      <link href="/2018/05/20/grafana%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/05/20/grafana%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-4.3.2-1.x86_64.rpm </span><br><span class="line">sudo yum localinstall grafana-4.3.2-1.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/grafana/grafana.ini</span><br></pre></td></tr></table></figure><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service grafana-server start</span><br></pre></td></tr></table></figure><h3 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> grafana-server.service</span><br></pre></td></tr></table></figure><h3 id="设置template依赖选择参数"><a href="#设置template依赖选择参数" class="headerlink" title="设置template依赖选择参数"></a>设置template依赖选择参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$topic</span>    SHOW TAG VALUES WITH KEY = <span class="string">"topic"</span>    </span><br><span class="line"><span class="variable">$host</span>    SHOW TAG VALUES WITH KEY = <span class="string">"host"</span> WHERE <span class="string">"topic"</span> =~ /^<span class="variable">$topic</span>$/</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>pssh,pscp工具使用</title>
      <link href="/2018/05/20/pssh-pscp%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/05/20/pssh-pscp%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h3 id="pssh在多个主机上并行地运行命令"><a href="#pssh在多个主机上并行地运行命令" class="headerlink" title="pssh在多个主机上并行地运行命令"></a>pssh在多个主机上并行地运行命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-h 执行命令的远程主机列表,文件内容格式[user@]host[:port] 如 test@172.16.10.10:229</span><br><span class="line">-H 执行命令主机，主机格式 user@ip:port</span><br><span class="line">-l 远程机器的用户名</span><br><span class="line">-p 一次最大允许多少连接</span><br><span class="line">-P 执行时输出执行信息</span><br><span class="line">-o 输出内容重定向到一个文件</span><br><span class="line">-e 执行错误重定向到一个文件</span><br><span class="line">-t 设置命令执行超时时间</span><br><span class="line">-A 提示输入密码并且把密码传递给ssh(如果私钥也有密码也用这个参数)</span><br><span class="line">-O 设置ssh一些选项</span><br><span class="line">-x 设置ssh额外的一些参数，可以多个，不同参数间空格分开</span><br><span class="line">-X 同-x,但是只能设置一个参数</span><br><span class="line">-i 显示标准输出和标准错误在每台host执行完毕后</span><br><span class="line"> </span><br><span class="line">pssh -H stat@192.168.1.100:18822 -i -A &quot;ls -l&quot;</span><br></pre></td></tr></table></figure><h3 id="pscp"><a href="#pscp" class="headerlink" title="pscp"></a>pscp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pscp -h ip文件 本地文件 远程目录</span><br><span class="line">pscp -h hosts.txt -l root -r /tmp/i.txt /tmp</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jmeter压测工具使用</title>
      <link href="/2018/05/20/jmeter%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/05/20/jmeter%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>在官网下载压缩包，解压后进入文件夹即可</p><h3 id="配置jmx"><a href="#配置jmx" class="headerlink" title="配置jmx"></a>配置jmx</h3><p>先在windows下执行 bin/jmeter.bat，<br>在图形界面下配置好参数，然后保存配置jmx文件</p><h3 id="在linux上执行"><a href="#在linux上执行" class="headerlink" title="在linux上执行"></a>在linux上执行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动执行server</span></span><br><span class="line">bin/jmeter-server</span><br><span class="line"><span class="comment"># 执行压测任务</span></span><br><span class="line">bin/jmeter -n -t metrics_interface/dcs.jmx -l report/metrics_interface.jtl.alpha -R127.0.0.1</span><br></pre></td></tr></table></figure><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-n  This specifies JMeter is to run in non-gui mode</span><br><span class="line">-t  [name of JMX file that contains the Test Plan].</span><br><span class="line">-l  [name of JTL file to log sample results to].</span><br><span class="line">-j  [name of JMeter run log file].</span><br><span class="line">-r  Run the test in the servers specified by the JMeter property &quot;remote_hosts&quot;</span><br><span class="line">-R  [list of remote servers] Run the test in the specified remote servers</span><br><span class="line">-g  [path to CSV file] generate report dashboard only</span><br><span class="line">-e  generate report dashboard after load test</span><br><span class="line">-o  output folder where to generate the report dashboard after load test. Folder must not exist or be empty</span><br><span class="line"> </span><br><span class="line">The script also lets you specify the optional firewall/proxy server information:</span><br><span class="line">-H  [proxy server hostname or ip address]</span><br><span class="line">-P  [proxy server port]</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>influxdb安装</title>
      <link href="/2018/05/20/influxdb%E5%AE%89%E8%A3%85/"/>
      <url>/2018/05/20/influxdb%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="influxdb"><a href="#influxdb" class="headerlink" title="influxdb"></a>influxdb</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.influxdata.com/influxdb/releases/influxdb-1.2.4.x86_64.rpm</span><br><span class="line">sudo yum localinstall influxdb-1.2.4.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="chronograf"><a href="#chronograf" class="headerlink" title="chronograf"></a>chronograf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.influxdata.com/chronograf/releases/chronograf-1.3.2.1.x86_64.rpm</span><br><span class="line">sudo yum localinstall chronograf-1.3.2.1.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="influxdb配置文件"><a href="#influxdb配置文件" class="headerlink" title="influxdb配置文件"></a>influxdb配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/influxdb/influxdb.conf</span><br></pre></td></tr></table></figure><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service influxdb start</span><br></pre></td></tr></table></figure><h3 id="创建数据保存策略"><a href="#创建数据保存策略" class="headerlink" title="创建数据保存策略"></a>创建数据保存策略</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE RETENTION POLICY <span class="string">"roll"</span> ON <span class="string">"dc"</span> DURATION 3d REPLICATION 1 DEFAULT</span><br><span class="line">ALTER RETENTION POLICY <span class="string">"roll"</span> ON <span class="string">"dc"</span> DURATION 3d REPLICATION 1 SHARD DURATION 6h DEFAULT</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看series</span></span><br><span class="line">influx -port 10086 -database dc -execute <span class="string">'show series'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>golang安装</title>
      <link href="/2018/05/20/golang%E5%AE%89%E8%A3%85/"/>
      <url>/2018/05/20/golang%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="下载压缩包"><a href="#下载压缩包" class="headerlink" title="下载压缩包"></a>下载压缩包</h3><h3 id="解压到系统目录"><a href="#解压到系统目录" class="headerlink" title="解压到系统目录"></a>解压到系统目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -C /usr/<span class="built_in">local</span> -xzf go<span class="variable">$VERSION</span>.<span class="variable">$OS</span>-<span class="variable">$ARCH</span>.tar.gz</span><br></pre></td></tr></table></figure><h3 id="设置path"><a href="#设置path" class="headerlink" title="设置path"></a>设置path</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python用gzip压缩string字符串，支持python2.6</title>
      <link href="/2018/05/20/python%E7%94%A8gzip%E5%8E%8B%E7%BC%A9string%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E6%94%AF%E6%8C%81python2-6/"/>
      <url>/2018/05/20/python%E7%94%A8gzip%E5%8E%8B%E7%BC%A9string%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E6%94%AF%E6%8C%81python2-6/</url>
      <content type="html"><![CDATA[<h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gzip_compress</span><span class="params">(buf, compresslevel=<span class="number">6</span>)</span>:</span></span><br><span class="line">    out = StringIO.StringIO()</span><br><span class="line">    f = gzip.GzipFile(fileobj=out, mode=<span class="string">"w"</span>, compresslevel=compresslevel)</span><br><span class="line">    f.write(buf)</span><br><span class="line">    f.close()</span><br><span class="line">    res = out.getvalue()</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h3 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gzip_decompress</span><span class="params">(buf)</span>:</span></span><br><span class="line">    obj = StringIO.StringIO(buf)</span><br><span class="line">    f = gzip.GzipFile(fileobj=obj)</span><br><span class="line">    result = f.read()</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python编译安装</title>
      <link href="/2018/05/20/python%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/"/>
      <url>/2018/05/20/python%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel cyrus-sasl cyrus-sasl-devel</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf Python-2.7.3.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-2.7.3</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ambari安装</title>
      <link href="/2018/05/20/ambari%E5%AE%89%E8%A3%85/"/>
      <url>/2018/05/20/ambari%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="添加yum源"><a href="#添加yum源" class="headerlink" title="添加yum源"></a>添加yum源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -nv http://public-repo-1.hortonworks.com/ambari/centos6/2.x/updates/2.2.2.0/ambari.repo -O /etc/yum.repos.d/ambari.repo</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum repolist</span><br><span class="line">yum install ambari-server</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ambari-server setup</span><br></pre></td></tr></table></figure><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ambari-server start</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="手动安装agent"><a href="#手动安装agent" class="headerlink" title="手动安装agent"></a>手动安装agent</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ambari-agent</span><br></pre></td></tr></table></figure><p>如果网络太慢，则可以配置本地的自定义源，这样就不用去远程下载</p><ul><li>1)下载ambari包：<br>wget <a href="http://public-repo-1.hortonworks.com/ambari/centos6/2.x/updates/2.2.2.0/ambari-2.2.2.0-centos6.tar.gz" target="_blank" rel="noopener">http://public-repo-1.hortonworks.com/ambari/centos6/2.x/updates/2.2.2.0/ambari-2.2.2.0-centos6.tar.gz</a></li><li>2)解压到http服务器中（nginx）</li><li><p>3)修改ambari.repo为目标ip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#VERSION_NUMBER=2.2.2.0-460</span><br><span class="line"> </span><br><span class="line">[Updates-ambari-2.2.2.0]</span><br><span class="line">name=ambari-2.2.2.0 - Updates</span><br><span class="line">baseurl=http://&lt;target_ip&gt;/AMBARI-2.2.2.0/centos6/2.2.2.0-460</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://&lt;target_ip&gt;/AMBARI-2.2.2.0/centos6/2.2.2.0-460/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins</span><br><span class="line">enabled=1</span><br><span class="line">priority=1</span><br></pre></td></tr></table></figure></li><li><p>4)手动安装agent时需要改agent的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ambari-agent/conf/ambari-agent.ini</span><br><span class="line">[server]</span><br><span class="line">hostname=&lt;your.ambari.server.hostname&gt;</span><br><span class="line">url_port=8440</span><br><span class="line">secured_url_port=8441</span><br></pre></td></tr></table></figure></li></ul><h3 id="清除metrics的数据"><a href="#清除metrics的数据" class="headerlink" title="清除metrics的数据"></a>清除metrics的数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">先停止metrics server服务和ambari-server</span><br><span class="line">找到metrics配置中的以下两项，然后删除对应文件夹</span><br><span class="line">删除hbase.rootdir：/data11/data11/var/lib/ambari-metrics-collector/hbase</span><br><span class="line">删除hbase.tmp.dir：/data10/var/lib/ambari-metrics-collector/hbase-tmp</span><br><span class="line">启动服务</span><br></pre></td></tr></table></figure><h3 id="删除服务"><a href="#删除服务" class="headerlink" title="删除服务"></a>删除服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u admin:admin -H <span class="string">"X-Requested-By: ambari"</span> -X DELETE  http://localhost:8080/api/v1/clusters/<span class="built_in">test</span>/services/SAMPLE</span><br></pre></td></tr></table></figure><h3 id="api"><a href="#api" class="headerlink" title="api"></a>api</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加机器</span></span><br><span class="line">curl --user admin:admin -i -X POST -H <span class="string">"X-Requested-By: ambari"</span>  http://127.0.0.1:8080/api/v1/clusters/ODF/hosts/am123</span><br><span class="line"><span class="comment"># 添加服务</span></span><br><span class="line">curl --user admin:admin -i -X POST -H <span class="string">"X-Requested-By: ambari"</span> http://127.0.0.1:8080/api/v1/clusters/ODF/hosts/am123/host_components/METRICS_MONITOR</span><br><span class="line"><span class="comment"># 安装组件</span></span><br><span class="line">curl --user admin:admin -i -X PUT -d <span class="string">'&#123;"HostRoles": &#123;"state": "INSTALLED"&#125;&#125;'</span> -H <span class="string">"X-Requested-By: ambari"</span> http://127.0.0.1:8080/api/v1/clusters/ODF/hosts/am123/host_components/METRICS_MONITOR</span><br><span class="line"><span class="comment"># 启动组件</span></span><br><span class="line">curl --user admin:admin -i -X PUT -d <span class="string">'&#123;"HostRoles": &#123;"state": "STARTED"&#125;&#125;'</span> -H <span class="string">"X-Requested-By: ambari"</span> http://127.0.0.1:8080/api/v1/clusters/ODF/hosts/am123/host_components/METRICS_MONITOR</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ssh免密码登录</title>
      <link href="/2018/05/20/ssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95/"/>
      <url>/2018/05/20/ssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95/</url>
      <content type="html"><![CDATA[<h3 id="生成公私密钥"><a href="#生成公私密钥" class="headerlink" title="生成公私密钥"></a>生成公私密钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line"><span class="comment"># 提示输入的话直接回车即可</span></span><br><span class="line"><span class="comment"># 生成的密钥在~/.ssh/，公钥：id_rsa.pub，私钥：id_rsa</span></span><br></pre></td></tr></table></figure><h3 id="将公钥设置到目标机器"><a href="#将公钥设置到目标机器" class="headerlink" title="将公钥设置到目标机器"></a>将公钥设置到目标机器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加公钥到authorized_keys</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line"><span class="comment"># 修改authorized_keys权限</span></span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>安装mvn</title>
      <link href="/2018/05/20/%E5%AE%89%E8%A3%85mvn/"/>
      <url>/2018/05/20/%E5%AE%89%E8%A3%85mvn/</url>
      <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载mvn压缩包，解压到/opt</p><h3 id="设置path"><a href="#设置path" class="headerlink" title="设置path"></a>设置path</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/opt/apache-maven-3.5.0/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>cdh添加自定义扩展服务，分发，管理</title>
      <link href="/2018/05/20/cdh%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%89%A9%E5%B1%95%E6%9C%8D%E5%8A%A1%EF%BC%8C%E5%88%86%E5%8F%91%EF%BC%8C%E7%AE%A1%E7%90%86/"/>
      <url>/2018/05/20/cdh%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%89%A9%E5%B1%95%E6%9C%8D%E5%8A%A1%EF%BC%8C%E5%88%86%E5%8F%91%EF%BC%8C%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://github.com/cloudera/cm_ext" target="_blank" rel="noopener">https://github.com/cloudera/cm_ext</a></p><p><a href="https://github.com/cloudera/cm_csds" target="_blank" rel="noopener">https://github.com/cloudera/cm_csds</a></p><h3 id="生成parcel"><a href="#生成parcel" class="headerlink" title="生成parcel"></a>生成parcel</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要在目标文件夹内新建meta文件，并在meta中新建文件parcel.json，文件内容需要自己参考资料填写</span></span><br><span class="line"><span class="comment"># 验证文件</span></span><br><span class="line">java -jar cm_ext/validator/target/validator.jar -p HELLO-1.0/meta/parcel.json</span><br><span class="line"><span class="comment"># 验证目录</span></span><br><span class="line">java -jar cm_ext/validator/target/validator.jar -d HELLO-1.0</span><br><span class="line"><span class="comment"># 打包parcel</span></span><br><span class="line">tar zcvf HELLO-1.0-el6.parcel HELLO-1.0 --owner=root --group=root</span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">java -jar cm_ext/validator/target/validator.jar -f HELLO-1.0-el6.parcel</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="对外提供http的parcel服务"><a href="#对外提供http的parcel服务" class="headerlink" title="对外提供http的parcel服务"></a>对外提供http的parcel服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成manifest.json</span></span><br><span class="line">python cm_ext/make_manifest/make_manifest.py /data/root</span><br><span class="line"><span class="comment"># 提供http服务</span></span><br><span class="line">python -m SimpleHTTPServer 10001</span><br></pre></td></tr></table></figure><h3 id="配置cm的parcel"><a href="#配置cm的parcel" class="headerlink" title="配置cm的parcel"></a>配置cm的parcel</h3><p>添加上述http地址，即可分发parcel</p><h3 id="生成CSD"><a href="#生成CSD" class="headerlink" title="生成CSD"></a>生成CSD</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建目录，内部结构为</span></span><br><span class="line">├── descriptor</span><br><span class="line">│   └── service.sdl</span><br><span class="line">└── scripts</span><br><span class="line">    └── control.sh</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 文件内容需要自己参考资料填写</span></span><br><span class="line"><span class="comment">#验证</span></span><br><span class="line">java -jar cm_ext/validator/target/validator.jar -s csd/HELLO-1.0/descriptor/service.sdl</span><br><span class="line"><span class="comment"># 打包</span></span><br><span class="line">jar -cvf HELLO-1.0.jar *</span><br><span class="line"><span class="comment"># 复制到csd目录</span></span><br><span class="line">~~~cp HELLO-1.0.jar /opt/cloudera/csd/</span><br><span class="line"></span><br><span class="line"><span class="comment">### 重启cm服务即可生效</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 示例</span></span><br><span class="line"></span><br><span class="line">HELLO-1.0/meta/parcel.json</span><br><span class="line">~~~ json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"schema_version"</span>:1,</span><br><span class="line">    <span class="string">"name"</span>:<span class="string">"HELLO"</span>,</span><br><span class="line">    <span class="string">"version"</span>:<span class="string">"1.0"</span>,</span><br><span class="line">    <span class="string">"setActiveSymlink"</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="string">"conflicts"</span>:<span class="string">""</span>,</span><br><span class="line">    <span class="string">"provides"</span>:[</span><br><span class="line">        <span class="string">"hello"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"scripts"</span>:&#123;</span><br><span class="line">        <span class="string">"defines"</span>:<span class="string">"hello_env.sh"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"packages"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"name"</span>:<span class="string">"hello"</span>,</span><br><span class="line">            <span class="string">"version"</span>:<span class="string">"1.0"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"components"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"name"</span>:<span class="string">"hello"</span>,</span><br><span class="line">            <span class="string">"version"</span>:<span class="string">"1.0"</span>,</span><br><span class="line">            <span class="string">"pkg_version"</span>:<span class="string">"1.0"</span>,</span><br><span class="line">            <span class="string">"pkg_release"</span>:<span class="string">"1.0"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"users"</span>:&#123;&#125;,</span><br><span class="line">    <span class="string">"groups"</span>:[]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>HELLO-1.0/meta/hello_env.sh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HELLO_DIRNAME=<span class="variable">$&#123;PARCEL_DIRNAME&#125;</span></span><br><span class="line"><span class="built_in">export</span> CDH_HELLO_HOME=<span class="variable">$PARCELS_ROOT</span>/<span class="variable">$HELLO_DIRNAME</span></span><br></pre></td></tr></table></figure></p><p>cat descriptor/service.sdl<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>:<span class="string">"HELLO"</span>,</span><br><span class="line">    <span class="attr">"label"</span>:<span class="string">"Hello"</span>,</span><br><span class="line">    <span class="attr">"description"</span>:<span class="string">"The hello service"</span>,</span><br><span class="line">    <span class="attr">"version"</span>:<span class="string">"1.1"</span>,</span><br><span class="line">    <span class="attr">"runAs"</span>:&#123;</span><br><span class="line">        <span class="attr">"user"</span>:<span class="string">"root"</span>,</span><br><span class="line">        <span class="attr">"group"</span>:<span class="string">"root"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"compatibility"</span>:&#123;</span><br><span class="line">        <span class="attr">"generation"</span>:<span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"icon"</span>:<span class="string">"images/icon.png"</span>,</span><br><span class="line">    <span class="attr">"parcel"</span> : &#123;</span><br><span class="line">        <span class="attr">"requiredTags"</span> : [ <span class="string">"hello"</span> ],</span><br><span class="line">        <span class="attr">"optionalTags"</span> : [ <span class="string">"hello-plugin"</span> ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"parameters"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>:<span class="string">"service_var1"</span>,</span><br><span class="line">            <span class="attr">"label"</span>:<span class="string">"Service Var1 Label"</span>,</span><br><span class="line">            <span class="attr">"description"</span>:<span class="string">"Service Var1 Description"</span>,</span><br><span class="line">            <span class="attr">"configName"</span>:<span class="string">"service.var1.config"</span>,</span><br><span class="line">            <span class="attr">"type"</span>:<span class="string">"string"</span>,</span><br><span class="line">            <span class="attr">"default"</span>:<span class="string">"this is a default"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"roles"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>:<span class="string">"HELLO_SERVICE"</span>,</span><br><span class="line">            <span class="attr">"label"</span>:<span class="string">"hello service"</span>,</span><br><span class="line">            <span class="attr">"pluralLabel"</span>:<span class="string">"hello services"</span>,</span><br><span class="line">            <span class="attr">"parameters"</span>:[</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"name"</span>:<span class="string">"init_content"</span>,</span><br><span class="line">                    <span class="attr">"label"</span>:<span class="string">"conf1"</span>,</span><br><span class="line">                    <span class="attr">"description"</span>:<span class="string">"conf"</span>,</span><br><span class="line">                    <span class="attr">"type"</span>:<span class="string">"string"</span>,</span><br><span class="line">                    <span class="attr">"default"</span>: <span class="string">"defaultiii"</span></span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"startRunner"</span>:&#123;</span><br><span class="line">                <span class="attr">"program"</span>:<span class="string">"scripts/control.sh"</span>,</span><br><span class="line">                <span class="attr">"args"</span>:[</span><br><span class="line">                    <span class="string">"start"</span></span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">"environmentVariables"</span>:&#123;</span><br><span class="line">                    <span class="attr">"PORT"</span>: <span class="string">"10002"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>scripts/control.sh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line">CMD=<span class="variable">$1</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">export</span> HELLO_HOME=<span class="variable">$&#123;HELLO_HOME:-$CDH_HELLO_HOME&#125;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">case</span> <span class="variable">$CMD</span> <span class="keyword">in</span></span><br><span class="line"> </span><br><span class="line">  (start)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Starting Hello123"</span></span><br><span class="line">    <span class="built_in">exec</span> python <span class="variable">$HELLO_HOME</span>/src/hello.py</span><br><span class="line">    ;;    </span><br><span class="line"> </span><br><span class="line">  (*)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Don't understand [<span class="variable">$CMD</span>]"</span></span><br><span class="line">    ;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>cdh-Cloudera Manager安装</title>
      <link href="/2018/05/20/cdh-Cloudera-Manager%E5%AE%89%E8%A3%85/"/>
      <url>/2018/05/20/cdh-Cloudera-Manager%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://archive.cloudera.com/cm5/installer/latest/cloudera-manager-installer.bin</span><br><span class="line">chmod u+x cloudera-manager-installer.bin</span><br><span class="line">sudo ./cloudera-manager-installer.bin</span><br></pre></td></tr></table></figure><h3 id="服务命令"><a href="#服务命令" class="headerlink" title="服务命令"></a>服务命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service cloudera-scm-server start|stop|restart</span><br><span class="line">service cloudera-scm-agent start|stop|restart</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>touch修改文件时间</title>
      <link href="/2018/05/20/touch%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E6%97%B6%E9%97%B4/"/>
      <url>/2018/05/20/touch%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E6%97%B6%E9%97%B4/</url>
      <content type="html"><![CDATA[<h3 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a>touch命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">touch -a -m -t 201512180130.09 fileName.ext</span><br><span class="line"> </span><br><span class="line">-a = accessed</span><br><span class="line">-m = modified</span><br><span class="line">-t = timestamp - use [[CC]YY]MMDDhhmm[.ss] time format</span><br><span class="line">-c, --no-create        <span class="keyword">do</span> not create any files</span><br></pre></td></tr></table></figure><h3 id="文件时间说明"><a href="#文件时间说明" class="headerlink" title="文件时间说明"></a>文件时间说明</h3><ul><li>a访问时间，读一次这个文件的内容，这个时间就会更新。比如对这个文件运用 more、cat等命令。ls、stat命令都不会修改文件的访问时间。</li><li>m修改时间，修改时间是文件内容最后一次被修改时间。比如：vi后保存文件。ls -l列出的时间就是这个时间。</li><li>c状态改动时间。是该文件的i节点最后一次被修改的时间，通过chmod、chown命令修改一次文件属性，这个时间就会更新。</li></ul>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python性能调试profile</title>
      <link href="/2018/05/20/python%E6%80%A7%E8%83%BD%E8%B0%83%E8%AF%95profile/"/>
      <url>/2018/05/20/python%E6%80%A7%E8%83%BD%E8%B0%83%E8%AF%95profile/</url>
      <content type="html"><![CDATA[<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul><li>cProfile：基于lsprof的用C语言实现的扩展应用，运行开销比较合理，适合分析运行时间较长的程序</li><li>profile：纯Python实现的性能分析模块，接口和cProfile一致。但在分析程序时增加了很大的运行开销。不过，如果想扩展profiler的功能，可以通过继承这个模块实现</li></ul><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m cProfile -s cumulative test.py</span><br></pre></td></tr></table></figure><h3 id="结果说明"><a href="#结果说明" class="headerlink" title="结果说明"></a>结果说明</h3><ul><li>ncalls：表示函数调用的次数</li><li>tottime：表示指定函数的总的运行时间，除掉函数中调用子函数的运行时间</li><li>percall：（第一个percall）等于 tottime/ncalls</li><li>cumtime：表示该函数及其所有子函数的调用运行的时间，即函数开始调用到返回的时间</li><li>percall：（第二个percall）即函数运行一次的平均时间，等于 cumtime/ncalls</li><li>filename:lineno(function)：每个函数调用的具体信息<br>另外，上面分析的时候，排序方式使用的是函数调用时间(cumulative)，<br>还有其它排序方式：calls, cumulative, file, line, module, name, nfl, pcalls, stdname, time</li></ul>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql外键约束关系说明</title>
      <link href="/2018/05/20/mysql%E5%A4%96%E9%94%AE%E7%BA%A6%E6%9D%9F%E5%85%B3%E7%B3%BB%E8%AF%B4%E6%98%8E/"/>
      <url>/2018/05/20/mysql%E5%A4%96%E9%94%AE%E7%BA%A6%E6%9D%9F%E5%85%B3%E7%B3%BB%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>MySQL有两种常用的引擎类型：MyISAM和InnoDB，目前只有InnoDB引擎类型支持外键约束。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tbl_name</span><br><span class="line">    <span class="keyword">ADD</span> [<span class="keyword">CONSTRAINT</span> [symbol]] FOREIGN <span class="keyword">KEY</span></span><br><span class="line">    [index_name] (index_col_name, ...)</span><br><span class="line">    <span class="keyword">REFERENCES</span> tbl_name (index_col_name,...)</span><br><span class="line">    [<span class="keyword">ON</span> <span class="keyword">DELETE</span> reference_option]</span><br><span class="line">    [<span class="keyword">ON</span> <span class="keyword">UPDATE</span> reference_option]</span><br></pre></td></tr></table></figure></p><h3 id="约束关系"><a href="#约束关系" class="headerlink" title="约束关系"></a>约束关系</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CASCADE：在父表上update/delete记录时，同步update/delete掉子表的匹配记录 </span><br><span class="line">SET NULL：在父表上update/delete记录时，将子表上匹配记录的列设为null (要注意子表的外键列不能为not null)  </span><br><span class="line">NO ACTION：如果子表中有匹配的记录,则不允许对父表对应候选键进行update/delete操作  </span><br><span class="line">RESTRICT：同no action, 都是立即检查外键约束</span><br><span class="line">mysql下NO ACTION == RESTRICT</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>inode软连接和硬连接说明</title>
      <link href="/2018/05/20/inode%E8%BD%AF%E8%BF%9E%E6%8E%A5%E5%92%8C%E7%A1%AC%E8%BF%9E%E6%8E%A5%E8%AF%B4%E6%98%8E/"/>
      <url>/2018/05/20/inode%E8%BD%AF%E8%BF%9E%E6%8E%A5%E5%92%8C%E7%A1%AC%E8%BF%9E%E6%8E%A5%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<h3 id="软连接"><a href="#软连接" class="headerlink" title="软连接"></a>软连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ln -s B A</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 文件A和文件B的inode号码不一样，只是文件A的内容是文件B的路径，读取文件A时，系统会自动将访问者导向文件B</span></span><br><span class="line"><span class="comment"># 文件A依赖于文件B而存在，如果删除了文件B，打开文件A就会报错</span></span><br><span class="line"><span class="comment"># 文件A指向文件B的文件名，而不是文件B的inode号码，文件B的inode"链接数"不会因此发生变化</span></span><br></pre></td></tr></table></figure><h3 id="硬连接"><a href="#硬连接" class="headerlink" title="硬连接"></a>硬连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ln B A</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 源文件与目标文件的inode号码相同，都指向同一个inode</span></span><br><span class="line"><span class="comment"># 这意味着，可以用不同的文件名访问同样的内容；对文件内容进行修改，会影响到所有文件名</span></span><br><span class="line"><span class="comment"># 但是，删除一个文件名，不影响另一个文件名的访问</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>robots.txt设置搜索引擎抓取目录</title>
      <link href="/2018/05/20/robots-txt%E8%AE%BE%E7%BD%AE%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%93%E5%8F%96%E7%9B%AE%E5%BD%95/"/>
      <url>/2018/05/20/robots-txt%E8%AE%BE%E7%BD%AE%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%93%E5%8F%96%E7%9B%AE%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>网站根路径/robots.txt</p><p>内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /static/</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python使用gdb调试</title>
      <link href="/2018/05/20/python%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/"/>
      <url>/2018/05/20/python%E4%BD%BF%E7%94%A8gdb%E8%B0%83%E8%AF%95/</url>
      <content type="html"><![CDATA[<h3 id="调试运行进程"><a href="#调试运行进程" class="headerlink" title="调试运行进程"></a>调试运行进程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdb -p pid</span><br></pre></td></tr></table></figure><h3 id="增加libpython来获取更多调试信息"><a href="#增加libpython来获取更多调试信息" class="headerlink" title="增加libpython来获取更多调试信息"></a>增加libpython来获取更多调试信息</h3><ul><li>a)下载python2.7的源码中的Tools/gdb/libpython.py</li><li><p>b)引入libpython.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 在gdb -p pid之后运行</span><br><span class="line">(gdb) python</span><br><span class="line">&gt;import sys</span><br><span class="line">&gt;sys.path.append(&apos;/path/to/libpython.py&apos;)</span><br><span class="line">&gt;import libpython</span><br><span class="line">&gt;end</span><br><span class="line">(gdb)</span><br></pre></td></tr></table></figure></li><li><p>c)之后可使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py-bt py-bt-full py-down py-list py-locals py-print py-up</span><br></pre></td></tr></table></figure></li></ul><p>注：python2.6的源码中提供了部分预定义函数以便大家使用gdb调试，我们只需将文件Python-2.6/Misc/gdbinit所包括的内容加入到用户目录下的.gdbinit文件中即可，这样每次启动gdb时会自动完成这些宏的定义。但可惜的是Python2.6.2 gdbini对于pylocals的定义居然有错误， 看来是没有随着代码的更新而同步更新。我们只需将 while $_i &lt; f-&gt;f_nlocals修改为 while $_i &lt; f-&gt;f_code-&gt;co_nlocals即可。</p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用let&#39;s encrypt配置免费的https证书</title>
      <link href="/2018/05/20/%E4%BD%BF%E7%94%A8let-s-encrypt%E9%85%8D%E7%BD%AE%E5%85%8D%E8%B4%B9%E7%9A%84https%E8%AF%81%E4%B9%A6/"/>
      <url>/2018/05/20/%E4%BD%BF%E7%94%A8let-s-encrypt%E9%85%8D%E7%BD%AE%E5%85%8D%E8%B4%B9%E7%9A%84https%E8%AF%81%E4%B9%A6/</url>
      <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install yum-utils</span><br><span class="line">yum-config-manager --<span class="built_in">enable</span> rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional</span><br><span class="line">yum install certbot</span><br></pre></td></tr></table></figure><h3 id="关闭nginx"><a href="#关闭nginx" class="headerlink" title="关闭nginx"></a>关闭nginx</h3><p>因为standalone需要占用80和443端口</p><h3 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certbot certonly --standalone -d example.com -d www.example.com</span><br></pre></td></tr></table></figure><h3 id="配置nginx证书"><a href="#配置nginx证书" class="headerlink" title="配置nginx证书"></a>配置nginx证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssl_certificate    /etc/letsencrypt/live/simpledao.win/fullchain.pem;</span><br><span class="line">ssl_certificate_key    /etc/letsencrypt/live/simpledao.win/privkey.pem;</span><br><span class="line">ssl_trusted_certificate /etc/letsencrypt/live/simpledao.win/chain.pem;</span><br></pre></td></tr></table></figure><h3 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h3><h3 id="更新证书，因为生成的证书只有90天有效期"><a href="#更新证书，因为生成的证书只有90天有效期" class="headerlink" title="更新证书，因为生成的证书只有90天有效期"></a>更新证书，因为生成的证书只有90天有效期</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 测试是否能生成</span></span><br><span class="line">certbot renew --dry-run</span><br><span class="line"><span class="comment"># 生成</span></span><br><span class="line">certbot renew</span><br></pre></td></tr></table></figure><p>注意：由于使用的是standalone模式，需要占用80和443端口，所以需要先关闭nginx才能生成或更新证书，使用webroot模式，则可以不关闭nginx，但需要配置。</p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python windows包下载</title>
      <link href="/2018/05/20/python-windows%E5%8C%85%E4%B8%8B%E8%BD%BD/"/>
      <url>/2018/05/20/python-windows%E5%8C%85%E4%B8%8B%E8%BD%BD/</url>
      <content type="html"><![CDATA[<p>下载地址</p><p><a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>scp</title>
      <link href="/2018/05/20/scp/"/>
      <url>/2018/05/20/scp/</url>
      <content type="html"><![CDATA[<p>-P: 指定端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P 1027 -r /e/code/tmp account@192.168.1.102:/home/account/code/tmp</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python 时间格式转换</title>
      <link href="/2018/05/20/python-%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/"/>
      <url>/2018/05/20/python-%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/</url>
      <content type="html"><![CDATA[<h3 id="datetime和str"><a href="#datetime和str" class="headerlink" title="datetime和str"></a>datetime和str</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># str转datetime</span></span><br><span class="line">datetime.datetime.strptime(<span class="string">'2017-04-23 00:00:00'</span>, <span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line"><span class="comment"># datetime转str</span></span><br><span class="line">datetime.datetime.now().strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>);</span><br><span class="line"><span class="comment"># datetime转timestamp</span></span><br><span class="line">time.mktime(dt.timetuple())</span><br></pre></td></tr></table></figure><h3 id="utc时间转本地时间"><a href="#utc时间转本地时间" class="headerlink" title="utc时间转本地时间"></a>utc时间转本地时间</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from_zone = tz.tzutc()</span><br><span class="line">to_zone = tz.tzlocal()</span><br><span class="line">utc = datetime.strptime(utcs, <span class="string">'%Y-%m-%dT%H:%M:%SZ'</span>)</span><br><span class="line">utc = utc.replace(tzinfo=from_zone)</span><br><span class="line">local_dt = utc.astimezone(to_zone)</span><br><span class="line">dts = local_dt.strftime(<span class="string">'%Y-%m-%d %H:%M'</span>)</span><br></pre></td></tr></table></figure><h3 id="datetime转timestamp"><a href="#datetime转timestamp" class="headerlink" title="datetime转timestamp"></a>datetime转timestamp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">datetime.fromtimestamp(ts)</span><br><span class="line">datetime.utcfromtimestamp(ts)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux date命令</title>
      <link href="/2018/05/20/linux-date%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/05/20/linux-date%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h3 id="date格式化"><a href="#date格式化" class="headerlink" title="date格式化"></a>date格式化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date +%Y-%m-%dT%H:%M:%S</span><br></pre></td></tr></table></figure><h3 id="昨天"><a href="#昨天" class="headerlink" title="昨天"></a>昨天</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date -d <span class="string">"yesterday 13:00"</span> <span class="string">'+%Y-%m-%d'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python设置日志翻滚</title>
      <link href="/2018/05/20/python%E8%AE%BE%E7%BD%AE%E6%97%A5%E5%BF%97%E7%BF%BB%E6%BB%9A/"/>
      <url>/2018/05/20/python%E8%AE%BE%E7%BD%AE%E6%97%A5%E5%BF%97%E7%BF%BB%E6%BB%9A/</url>
      <content type="html"><![CDATA[<h3 id="可翻滚的日志-logger-py"><a href="#可翻滚的日志-logger-py" class="headerlink" title="可翻滚的日志: logger.py"></a>可翻滚的日志: logger.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> logging.handlers <span class="keyword">import</span> RotatingFileHandler</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_full_path</span><span class="params">(local_path)</span>:</span></span><br><span class="line">    file_path = os.path.abspath(__file__)</span><br><span class="line">    base_path = os.path.dirname(file_path)</span><br><span class="line">    <span class="keyword">return</span> os.path.join(base_path, local_path)</span><br><span class="line">     </span><br><span class="line">LOG_LEVEL = logging.DEBUG</span><br><span class="line">LOG_FORMAT = <span class="string">'%(asctime)s %(levelname)s [%(filename)s:%(funcName)s:%(lineno)s] %(message)s'</span></span><br><span class="line">DATEFMT = <span class="string">'%Y-%m-%d %H:%M:%S'</span></span><br><span class="line">LOG_FILE_NAME = get_full_path(<span class="string">'logs/app.log'</span>)</span><br><span class="line">LOG_FILE_MAX_SIZE = <span class="number">10</span> * <span class="number">1024</span> * <span class="number">1024</span></span><br><span class="line">LOG_FILE_BACKUP_COUNT = <span class="number">5</span></span><br><span class="line"> </span><br><span class="line">formatter = logging.Formatter(LOG_FORMAT, datefmt=DATEFMT)</span><br><span class="line"> </span><br><span class="line">console = logging.StreamHandler()</span><br><span class="line">console.setFormatter(formatter)</span><br><span class="line"> </span><br><span class="line">rotate = RotatingFileHandler(LOG_FILE_NAME, maxBytes=LOG_FILE_MAX_SIZE, backupCount=LOG_FILE_BACKUP_COUNT)</span><br><span class="line">rotate.setFormatter(formatter)</span><br><span class="line"> </span><br><span class="line">logger = logging.getLogger(<span class="string">'app_common'</span>)</span><br><span class="line">logger.propagate = <span class="keyword">False</span></span><br><span class="line">logger.setLevel(LOG_LEVEL)</span><br><span class="line">logger.addHandler(console)</span><br><span class="line">logger.addHandler(rotate)</span><br></pre></td></tr></table></figure><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> logger <span class="keyword">import</span> logger</span><br><span class="line"> </span><br><span class="line">logger.info(<span class="string">'log'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>curl</title>
      <link href="/2018/05/20/curl/"/>
      <url>/2018/05/20/curl/</url>
      <content type="html"><![CDATA[<h3 id="post-json"><a href="#post-json" class="headerlink" title="post json"></a>post json</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H <span class="string">"Content-Type: application/json"</span> -X POST -d <span class="string">'&#123;"a":"b","c":10&#125;'</span> http://127.0.0.1 -w %&#123;time_connect&#125;:%&#123;time_starttransfer&#125;:%&#123;time_total&#125;</span><br></pre></td></tr></table></figure><h3 id="post-form"><a href="#post-form" class="headerlink" title="post form"></a>post form</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -d <span class="string">"param1=value1&amp;param2=value2"</span> <span class="string">"http://127.0.0.1/test"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python http请求</title>
      <link href="/2018/05/20/python-http%E8%AF%B7%E6%B1%82/"/>
      <url>/2018/05/20/python-http%E8%AF%B7%E6%B1%82/</url>
      <content type="html"><![CDATA[<p>http请求<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">open_url</span><span class="params">(url, method=<span class="string">'GET'</span>, headers=None, postform=None, postdata=None, timeout=<span class="number">10</span>)</span>:</span></span><br><span class="line">    <span class="string">"""http请求"""</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> headers <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            headers = &#123;&#125;</span><br><span class="line">        <span class="keyword">if</span> postform <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            postform = &#123;&#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> len(postform) &gt; <span class="number">0</span>:</span><br><span class="line">            data = urllib.urlencode(postform)</span><br><span class="line">            headers[<span class="string">'Content-Type'</span>] = <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            data = postdata</span><br><span class="line"> </span><br><span class="line">        req = urllib2.Request(url=url, data=data, headers=headers)</span><br><span class="line">        req.get_method = <span class="keyword">lambda</span>: method.upper()</span><br><span class="line">        res = urllib2.urlopen(req, timeout=timeout)</span><br><span class="line">        data = res.read()</span><br><span class="line">        res.close()</span><br><span class="line">        <span class="keyword">return</span> res.code, res.headers, data</span><br><span class="line">    <span class="keyword">except</span> urllib2.HTTPError, e:</span><br><span class="line">        data = e.read()</span><br><span class="line">        e.close()</span><br><span class="line">        <span class="keyword">return</span> e.code, e.headers, data</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        log = traceback.format_exc().replace(<span class="string">'\n'</span>, <span class="string">' '</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">500</span>, &#123;&#125;, log</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>beeline连接</title>
      <link href="/2018/05/20/beeline%E8%BF%9E%E6%8E%A5/"/>
      <url>/2018/05/20/beeline%E8%BF%9E%E6%8E%A5/</url>
      <content type="html"><![CDATA[<h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">beeline -n hive -p hive -u jdbc:hive2://127.0.0.1:10000</span><br></pre></td></tr></table></figure><h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/beeline --color=<span class="literal">true</span> --showHeader=<span class="literal">true</span> --outputformat=tsv2 -n hive -p hive -u jdbc:hive2://hiveserver2.simpledao.com:10000 -e <span class="string">"</span></span><br><span class="line"><span class="string">set hive.merge.mapredfiles=true;</span></span><br><span class="line"><span class="string">set hive.merge.mapfiles=true;</span></span><br><span class="line"><span class="string">set hive.merge.smallfiles.avgsize=500000000;</span></span><br><span class="line"><span class="string">set mapred.max.split.size=4000000000;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">select * from table1 limit 10;"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>flask wtf form template渲染</title>
      <link href="/2018/05/20/flask-wtf-form-template%E6%B8%B2%E6%9F%93/"/>
      <url>/2018/05/20/flask-wtf-form-template%E6%B8%B2%E6%9F%93/</url>
      <content type="html"><![CDATA[<p>flask wtf form template渲染<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">class</span>=<span class="string">"admin-form form-horizontal"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    &#123;&#123; task_form.csrf_token &#125;&#125;</span><br><span class="line"> </span><br><span class="line">    &#123;&#123; task_form.hidden_tag() &#125;&#125;</span><br><span class="line"> </span><br><span class="line">    &#123;% for field, widget in task_form._fields.iteritems() %&#125;</span><br><span class="line">        &#123;% if field != "csrf_token" %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"col-md-offset-2"</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span></span><br><span class="line">                &#123;&#123; ', '.join(task_form.errors[field]) &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                &#123;&#123; task_form[field].label(class="col-md-2 control-label") &#125;&#125;</span><br><span class="line"> </span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-10"</span>&gt;</span></span><br><span class="line">                    &#123;&#123; task_form[field](class="form-control") &#125;&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-offset-2 col-md-10 submit-row"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">value</span>=<span class="string">"保存"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>kafka常用命令</title>
      <link href="/2018/05/20/kafka%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/05/20/kafka%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h3 id="查看topic列表"><a href="#查看topic列表" class="headerlink" title="查看topic列表"></a>查看topic列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics --zookeeper 127.0.0.1 --list</span><br></pre></td></tr></table></figure><h3 id="创建topic"><a href="#创建topic" class="headerlink" title="创建topic"></a>创建topic</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics.sh --create --zookeeper 127.0.0.1:2181/kafkastreaming --replication-factor 2 --partitions 24 --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="删除topic"><a href="#删除topic" class="headerlink" title="删除topic"></a>删除topic</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics.sh --delete --zookeeper 127.0.0.1:2181/kafkastreaming --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="修改分区数"><a href="#修改分区数" class="headerlink" title="修改分区数"></a>修改分区数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics --zookeeper 127.0.0.1  --alter --topic topic1 --partitions 16</span><br></pre></td></tr></table></figure><h3 id="生产"><a href="#生产" class="headerlink" title="生产"></a>生产</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-console-producer.sh --broker-list 127.0.0.1:9092 --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="消费"><a href="#消费" class="headerlink" title="消费"></a>消费</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic <span class="built_in">test</span> --from-beginning</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>设置JDK环境变量</title>
      <link href="/2018/05/20/%E8%AE%BE%E7%BD%AEJDK%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
      <url>/2018/05/20/%E8%AE%BE%E7%BD%AEJDK%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      <content type="html"><![CDATA[<p>设置JDK的环境变量<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/jdk1.7.0_79</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>airflow配置</title>
      <link href="/2018/05/20/airflow%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/05/20/airflow%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h3 id="修改数据库为mysql"><a href="#修改数据库为mysql" class="headerlink" title="修改数据库为mysql"></a>修改数据库为mysql</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql_alchemy_conn = mysql://root:123@localhost:3066/airflow?charset=utf8</span><br></pre></td></tr></table></figure><h3 id="修改celery的broker为redis"><a href="#修改celery的broker为redis" class="headerlink" title="修改celery的broker为redis"></a>修改celery的broker为redis</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">broker_url = redis://localhost:6379/0</span><br><span class="line"># rabbitmq: amqp://guest:guest@localhost:5672//</span><br><span class="line">celery_result_backend =  redis://localhost:6379/0</span><br></pre></td></tr></table></figure><h3 id="添加user"><a href="#添加user" class="headerlink" title="添加user"></a>添加user</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> airflow</span><br><span class="line"><span class="keyword">from</span> airflow <span class="keyword">import</span> models, settings</span><br><span class="line"><span class="keyword">from</span> airflow.contrib.auth.backends.password_auth <span class="keyword">import</span> PasswordUser</span><br><span class="line">user = PasswordUser(models.User())</span><br><span class="line">user.username = <span class="string">'test_user'</span></span><br><span class="line">user.email = <span class="string">'test_user@example.com'</span></span><br><span class="line">user.password = <span class="string">'test_user'</span></span><br><span class="line">session = settings.Session()</span><br><span class="line">session.add(user)</span><br><span class="line">session.commit()</span><br><span class="line">session.close()</span><br><span class="line">exit()</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows挂载ubuntu的nfs盘</title>
      <link href="/2018/05/20/windows%E6%8C%82%E8%BD%BDubuntu%E7%9A%84nfs%E7%9B%98/"/>
      <url>/2018/05/20/windows%E6%8C%82%E8%BD%BDubuntu%E7%9A%84nfs%E7%9B%98/</url>
      <content type="html"><![CDATA[<h3 id="安装Ubuntu-nfs"><a href="#安装Ubuntu-nfs" class="headerlink" title="安装Ubuntu nfs"></a>安装Ubuntu nfs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nfs-kernel-server</span><br></pre></td></tr></table></figure><h3 id="配置-etc-exports"><a href="#配置-etc-exports" class="headerlink" title="配置/etc/exports"></a>配置/etc/exports</h3><p>允许挂载的目录及权限在文件/etc/exports中进行定义。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 例如要共享目录/var/www，需要在/etc/exports文件末尾添加如下一行</span></span><br><span class="line">/var/www *(rw,sync,no_root_squash)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># /var/www是要共享的目录</span></span><br><span class="line"><span class="comment"># *代表允许所有的网络段访问</span></span><br><span class="line"><span class="comment"># rw是可读写权限</span></span><br><span class="line"><span class="comment"># sync是资料同步写入内存和硬盘</span></span><br><span class="line"><span class="comment"># no_root_squash是Ubuntu nfs客户端分享目录使用者的权限,</span></span><br><span class="line"><span class="comment">#    如果客户端使用的是root用户，那么对于该共享目录而言，该客户端就具有root权限</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><h3 id="重启nfs服务"><a href="#重启nfs服务" class="headerlink" title="重启nfs服务"></a>重启nfs服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/nfs-kernel-server restart</span><br></pre></td></tr></table></figure><h3 id="显示挂载盘"><a href="#显示挂载盘" class="headerlink" title="显示挂载盘"></a>显示挂载盘</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">showmount -e</span><br></pre></td></tr></table></figure><h3 id="windows下连接ubuntu的nfs盘"><a href="#windows下连接ubuntu的nfs盘" class="headerlink" title="windows下连接ubuntu的nfs盘"></a>windows下连接ubuntu的nfs盘</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mount \\127.0.0.1\var\www x:\</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 127.0.0.1需替换为ubuntu的ip</span></span><br><span class="line"><span class="comment"># \var\www为共享的目录</span></span><br><span class="line"><span class="comment"># x:\为挂载到windows的x盘</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 打开我的电脑，即可看到ubuntu共享的x盘</span></span><br></pre></td></tr></table></figure><h3 id="windows取消挂载"><a href="#windows取消挂载" class="headerlink" title="windows取消挂载"></a>windows取消挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount -a</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>virtualbox允许在共享文件夹创建软连接</title>
      <link href="/2018/05/20/virtualbox%E5%85%81%E8%AE%B8%E5%9C%A8%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E5%88%9B%E5%BB%BA%E8%BD%AF%E8%BF%9E%E6%8E%A5/"/>
      <url>/2018/05/20/virtualbox%E5%85%81%E8%AE%B8%E5%9C%A8%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E5%88%9B%E5%BB%BA%E8%BD%AF%E8%BF%9E%E6%8E%A5/</url>
      <content type="html"><![CDATA[<p>在virtualbox的共享文件夹中创建软连接会提示错误：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cannot create symbolic link</span><br></pre></td></tr></table></figure></p><p>原因：VirtualBox从安全角度出发，限制了软链接的创建，需要打开相应的Feature。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage setextradata YOURVMNAME VBoxInternal2/SharedFoldersEnableSymlinksCreate/YOURSHAREFOLDERNAME 1  </span><br><span class="line"><span class="comment"># YOURVMNAME为虚拟机中ubuntu系统的名称</span></span><br><span class="line"><span class="comment"># YOURSHAREFOLDERNAME 为共享的目录名称</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 例如：</span></span><br><span class="line">C:\Program Files\Oracle\VirtualBox\VBoxManage setextradata ubuntu1404 VBoxInternal2/SharedFoldersEnableSymlinksCreate/share 1</span><br></pre></td></tr></table></figure></p><p>设置完毕以管理者身份运行VirtualBox即可。</p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shadowshocks配置</title>
      <link href="/2018/05/20/shadowshocks%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/05/20/shadowshocks%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -p 6001 -k 123456abc -m aes-256-cfb -s 0.0.0.0 -v</span><br></pre></td></tr></table></figure><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sslocal -s 127.0.0.1 -p 6001 -k 123456abc -m aes-256-cfb -v</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>redis</title>
      <link href="/2018/05/20/redis/"/>
      <url>/2018/05/20/redis/</url>
      <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install redis</span><br></pre></td></tr></table></figure><h3 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 127.0.0.1 -p 6379</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hive执行设置参数</title>
      <link href="/2018/05/20/hive%E6%89%A7%E8%A1%8C%E8%AE%BE%E7%BD%AE%E5%8F%82%E6%95%B0/"/>
      <url>/2018/05/20/hive%E6%89%A7%E8%A1%8C%E8%AE%BE%E7%BD%AE%E5%8F%82%E6%95%B0/</url>
      <content type="html"><![CDATA[<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> hive.merge.mapredfiles=<span class="literal">true</span>;</span><br><span class="line"><span class="built_in">set</span> hive.merge.mapfiles=<span class="literal">true</span>;</span><br><span class="line"><span class="built_in">set</span> hive.merge.smallfiles.avgsize=500000000;</span><br><span class="line"><span class="built_in">set</span> mapred.max.split.size=4000000000;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>pyinstller打包</title>
      <link href="/2018/05/20/pyinstller%E6%89%93%E5%8C%85/"/>
      <url>/2018/05/20/pyinstller%E6%89%93%E5%8C%85/</url>
      <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#构建前清除缓存和临时文件</span><br><span class="line">--clean </span><br><span class="line">#指定日志级别 DEBUG, INFO, WARN, ERROR, CRITICAL</span><br><span class="line">--log-level </span><br><span class="line">#构建的可执行文件和其它依赖文件放在同一个目录下（默认值）</span><br><span class="line">-D, --onedir </span><br><span class="line">#全部依赖都包到一个巨大的exe文件中，不过经过实践，有时候windows会报格式错误，造成程序无法执行</span><br><span class="line">-F, --onefile </span><br><span class="line">#指定程序名称</span><br><span class="line">-n NAME, --name NAME </span><br><span class="line">#设置搜索的导入路径，可以用路径分隔符，windows用分号，linux用冒号，分隔指定多个目录，也可以使用多个-p分别指定</span><br><span class="line">-p DIR, --paths DIR </span><br><span class="line">#不使用upx去压缩文件，因为经过实践，有时候windows会报格式错误，造成程序无法执行</span><br><span class="line">--noupx </span><br><span class="line">#默认会打开控制台显示标准输出</span><br><span class="line">-c, --console, --nowindowed </span><br><span class="line">#不显示控制台，制作窗口程序</span><br><span class="line">-w, --windowed, --noconsole </span><br><span class="line">#Any Shared Assemblies bundled into the application will be changed into Private Assemblies. </span><br><span class="line">#This means the exact versions of these assemblies will always be used, </span><br><span class="line">#and any newer versions installed on user machines at the system level will be ignored. </span><br><span class="line">#只会使用私有的动态链接库</span><br><span class="line">--win-private-assemblies </span><br><span class="line">#指定程序图标</span><br><span class="line">--icon</span><br></pre></td></tr></table></figure><h3 id="打包pyqt5的示例"><a href="#打包pyqt5的示例" class="headerlink" title="打包pyqt5的示例"></a>打包pyqt5的示例</h3><p>由于pyqt5只支持python3.5以上，并且pyinstaller支持3.5，则选用python3.5，另外py2exe不支持3.5，因此无法用py2exe打包pyqt5。</p><p>pyinstaller -w –noupx –clean –win-private-assemblies –path C:\Users\P\AppData\Local\Programs\Python\Python35-32\Lib\site-packages\PyQt5\Qt\bin main.py<br>出现error loading dll python35.dll error code=193，很可能是因为dll32位和64位不对应，或者是缺少dll，例如api-ms-win-crt*开头的dll</p><p><a href="http://stackoverflow.com/questions/33265663/api-ms-win-crt-runtime-l1-1-0-dll-is-missing-when-opening-microsoft-office-file" target="_blank" rel="noopener">http://stackoverflow.com/questions/33265663/api-ms-win-crt-runtime-l1-1-0-dll-is-missing-when-opening-microsoft-office-file</a></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>rabbitmq安装</title>
      <link href="/2018/05/20/rabbitmq%E5%AE%89%E8%A3%85/"/>
      <url>/2018/05/20/rabbitmq%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install erlang</span><br><span class="line">rpm --import https://www.rabbitmq.com/rabbitmq-signing-key-public.asc</span><br><span class="line">yum install rabbitmq-server</span><br></pre></td></tr></table></figure><h3 id="添加hostname"><a href="#添加hostname" class="headerlink" title="添加hostname"></a>添加hostname</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line"><span class="comment"># 添加一行：</span></span><br><span class="line">127.0.0.1 rabbitmq-server</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动：</span></span><br><span class="line">service rabbitmq-server start</span><br><span class="line"><span class="comment"># 停止：</span></span><br><span class="line">service rabbitmq-server stop</span><br><span class="line"><span class="comment"># 重启：</span></span><br><span class="line">service rabbitmq-server restart</span><br><span class="line"><span class="comment"># 设置开机启动：</span></span><br><span class="line">chkconfig rabbitmq-server on</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="管理后台"><a href="#管理后台" class="headerlink" title="管理后台"></a>管理后台</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启 Web 界面管理：</span></span><br><span class="line">rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_management</span><br><span class="line">http://rabbitmq-server:15672</span><br></pre></td></tr></table></figure><h3 id="broker地址"><a href="#broker地址" class="headerlink" title="broker地址"></a>broker地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">broker_url = amqp://guest:guest@localhost:5672/vhost</span><br></pre></td></tr></table></figure><h3 id="python连接出错"><a href="#python连接出错" class="headerlink" title="python连接出错"></a>python连接出错</h3><p>Received and deleted unknown message.  Wrong destination?!?<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip uninstall librabbitmq</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>zookeeper</title>
      <link href="/2018/05/20/zookeeper/"/>
      <url>/2018/05/20/zookeeper/</url>
      <content type="html"><![CDATA[<h3 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">bin/zkCli.sh -server 127.0.0.1:2181</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建节点，其中"-s"表示创建一个"有序"节点,"-e"表示创建一个临时节点.默认为持久性节点</span></span><br><span class="line">create [-s] [-e] /path data acl</span><br><span class="line"><span class="comment"># 获取节点数据</span></span><br><span class="line">get /path</span><br><span class="line"><span class="comment"># 查看子节点列表</span></span><br><span class="line">ls /path</span><br><span class="line"><span class="comment"># 设置节点值</span></span><br><span class="line"><span class="built_in">set</span> path data [version]</span><br><span class="line"><span class="comment"># 删除节点</span></span><br><span class="line">delete /path [version]</span><br><span class="line"><span class="comment"># 删除节点，及其子节点</span></span><br><span class="line">rmr path</span><br><span class="line"><span class="comment"># 设置ACL</span></span><br><span class="line">setAcl path acl</span><br><span class="line"><span class="comment"># 添加授权信息</span></span><br><span class="line">addauth schema auth</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务组件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>gevent超时逻辑</title>
      <link href="/2018/05/20/gevent%E8%B6%85%E6%97%B6%E9%80%BB%E8%BE%91/"/>
      <url>/2018/05/20/gevent%E8%B6%85%E6%97%B6%E9%80%BB%E8%BE%91/</url>
      <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gevent <span class="keyword">import</span> monkey</span><br><span class="line">monkey.patch_all()</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> gevent</span><br><span class="line"> </span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">with</span> gevent.Timeout(<span class="number">2</span>, <span class="keyword">False</span>) <span class="keyword">as</span> timeout:</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line"><span class="keyword">print</span> i</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>gevent协程</title>
      <link href="/2018/05/20/gevent%E5%8D%8F%E7%A8%8B/"/>
      <url>/2018/05/20/gevent%E5%8D%8F%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h3 id="模拟多线程运行"><a href="#模拟多线程运行" class="headerlink" title="模拟多线程运行"></a>模拟多线程运行</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gevent <span class="keyword">import</span> monkey</span><br><span class="line">monkey.patch_all()</span><br><span class="line"><span class="keyword">import</span> gevent</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'Running in foo'</span>)</span><br><span class="line">    gevent.sleep(<span class="number">0</span>)</span><br><span class="line">    print(<span class="string">'Explicit context switch to foo again'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'Explicit context to bar'</span>)</span><br><span class="line">    gevent.sleep(<span class="number">0</span>)    </span><br><span class="line">    print(<span class="string">'Implicit context switch back to bar'</span>)</span><br><span class="line"> </span><br><span class="line">gevent.joinall([</span><br><span class="line">    gevent.spawn(foo),</span><br><span class="line">    gevent.spawn(bar),</span><br><span class="line">])</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python遍历文件夹</title>
      <link href="/2018/05/20/python%E9%81%8D%E5%8E%86%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
      <url>/2018/05/20/python%E9%81%8D%E5%8E%86%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
      <content type="html"><![CDATA[<p>followlinks表示是否扫描软连接，topdown是否广度遍历<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file_path</span><span class="params">(dir_path)</span>:</span></span><br><span class="line">    <span class="string">"""获取文件夹下面的所有文件，包括子文件夹"""</span></span><br><span class="line">    file_list = os.walk(dir_path, topdown=<span class="keyword">True</span>, onerror=<span class="keyword">None</span>, followlinks=<span class="keyword">False</span>)</span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> file_list:</span><br><span class="line">        <span class="keyword">for</span> f <span class="keyword">in</span> files:</span><br><span class="line">            path = os.path.join(root, f)</span><br><span class="line">            <span class="keyword">yield</span> path.replace(<span class="string">'\\'</span>, <span class="string">'/'</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>常用压缩命令</title>
      <link href="/2018/05/20/%E5%B8%B8%E7%94%A8%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/05/20/%E5%B8%B8%E7%94%A8%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf file.tar</span><br><span class="line">tar -xzvf file.tar.gz</span><br><span class="line">tar -xjvf file.tar.bz2</span><br><span class="line">tar -xZvf file.tar.Z</span><br><span class="line">unrar e file.rar</span><br><span class="line">unzip file.zip</span><br><span class="line">tar zxvf file.tgz</span><br><span class="line">gzip -d</span><br></pre></td></tr></table></figure><h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">压缩: tar -cvf FileName.tar DirName</span><br><span class="line">解压: tar -xvf FileName.tar</span><br><span class="line"> </span><br><span class="line">例子: c++目录 压缩成 c++.tar</span><br><span class="line">tar -cvf c++.tar c++</span><br><span class="line"> </span><br><span class="line">c++.tar解压成c++</span><br><span class="line">tar -xvf c++.tar</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ie插件打包成cab文件使用和更新</title>
      <link href="/2018/05/20/ie%E6%8F%92%E4%BB%B6%E6%89%93%E5%8C%85%E6%88%90cab%E6%96%87%E4%BB%B6%E4%BD%BF%E7%94%A8%E5%92%8C%E6%9B%B4%E6%96%B0/"/>
      <url>/2018/05/20/ie%E6%8F%92%E4%BB%B6%E6%89%93%E5%8C%85%E6%88%90cab%E6%96%87%E4%BB%B6%E4%BD%BF%E7%94%A8%E5%92%8C%E6%9B%B4%E6%96%B0/</url>
      <content type="html"><![CDATA[<h3 id="ie插件用ATL开发为dll后缀，用MFC开发为ocx后缀，打包的方法都一样。"><a href="#ie插件用ATL开发为dll后缀，用MFC开发为ocx后缀，打包的方法都一样。" class="headerlink" title="ie插件用ATL开发为dll后缀，用MFC开发为ocx后缀，打包的方法都一样。"></a>ie插件用ATL开发为dll后缀，用MFC开发为ocx后缀，打包的方法都一样。</h3><h3 id="打包步骤"><a href="#打包步骤" class="headerlink" title="打包步骤"></a>打包步骤</h3><ul><li><p>a.假如开发的插件文件名为：TransferAgent.dll。</p><a id="more"></a></li><li><p>b.新建一个inf后缀的文本文件，例如为inf.inf,文件内容修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[version] </span><br><span class="line">signature=&quot;$Chicago$&quot;</span><br><span class="line">AdvancedINF=2.0</span><br><span class="line">[Add.Code]</span><br><span class="line">TransferAgent.dll=TransferAgent.dll</span><br><span class="line">[TransferAgent.dll]</span><br><span class="line">file-win32-x86=thiscab</span><br><span class="line">clsid=&#123;FD4972BA-686F-4F23-8EB4-9ACC62BA0FC9&#125;</span><br><span class="line">RegisterServer=yes</span><br><span class="line">FileVersion=1.0.0.1</span><br></pre></td></tr></table></figure></li><li><p>c.主要参数说明</p><p>上述的Add.Code中包含了所需的dll，如果有其它dll，可以自行添加，并且每一个dll都要另外进行说明，如上面的：[TransferAgent.dll]，特别注意的是要添加插件中组件的clsid，和FileVersion（即文件的版本号）。</p></li><li><p>d.打包</p><p>运行命令: CabArc.Exe -s 6144 n TransferAgent.cab TransferAgent.dll inf.inf</p><p>(CabArc.Exe 可在vs2005目录中找到：C:\Program Files\Microsoft Visual Studio 8\Common7\Tools\Bin）。</p></li></ul><h3 id="插件使用"><a href="#插件使用" class="headerlink" title="插件使用"></a>插件使用</h3><ul><li>a.在页面中设置插件：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">id</span>=<span class="string">"ieplugin"</span> <span class="attr">codeBase</span>=<span class="string">"/TransferAgent.cab#Version=1,0,0,1"</span><span class="attr">classid</span>=<span class="string">"clsid:FD4972BA-686F-4F23-8EB4-9ACC62BA0FC9"</span>&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>其中version和clsid都要和inf文件中的一致。</p><ul><li>b.Js调用<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">axobj = <span class="built_in">document</span>.getElementById(<span class="string">"ieplugin"</span>);</span><br><span class="line">axobj.Test();  <span class="comment">//Test为插件的一个函数。</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="插件更新"><a href="#插件更新" class="headerlink" title="插件更新"></a>插件更新</h3><pre><code>重新编译插件时要注意修改插件的版本号，并且同时修改inf文件中的版本号，和页面元素的版本号。这样当ie加载页面时，发现版本号已修改，则会重新下载插件安装，实现自动更新。</code></pre>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>win32项目中调出和隐藏控制台</title>
      <link href="/2018/05/20/win32%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%B0%83%E5%87%BA%E5%92%8C%E9%9A%90%E8%97%8F%E6%8E%A7%E5%88%B6%E5%8F%B0/"/>
      <url>/2018/05/20/win32%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%B0%83%E5%87%BA%E5%92%8C%E9%9A%90%E8%97%8F%E6%8E%A7%E5%88%B6%E5%8F%B0/</url>
      <content type="html"><![CDATA[<h3 id="显示控制台，并且能用print打印显示，方便调试"><a href="#显示控制台，并且能用print打印显示，方便调试" class="headerlink" title="显示控制台，并且能用print打印显示，方便调试"></a>显示控制台，并且能用print打印显示，方便调试</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">::AllocConsole();</span><br><span class="line">::SetConsoleTitle(_T(<span class="string">"测试控制台"</span>));</span><br><span class="line">freopen(<span class="string">"conin$"</span>,<span class="string">"r+t"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"conout$"</span>,<span class="string">"w+t"</span>,<span class="built_in">stdout</span>);</span><br><span class="line">freopen(<span class="string">"conerr$"</span>,<span class="string">"w+t"</span>,<span class="built_in">stderr</span>);</span><br><span class="line"><span class="comment">//释放</span></span><br><span class="line">FreeConsole();</span><br></pre></td></tr></table></figure><h3 id="win32控制台工程隐藏dos窗口"><a href="#win32控制台工程隐藏dos窗口" class="headerlink" title="win32控制台工程隐藏dos窗口"></a>win32控制台工程隐藏dos窗口</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment( linker, <span class="meta-string">"/subsystem:windows /entry:mainCRTStartup"</span> )</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>常用js代码</title>
      <link href="/2018/05/20/%E5%B8%B8%E7%94%A8js%E4%BB%A3%E7%A0%81/"/>
      <url>/2018/05/20/%E5%B8%B8%E7%94%A8js%E4%BB%A3%E7%A0%81/</url>
      <content type="html"><![CDATA[<h3 id="判断是否ip地址"><a href="#判断是否ip地址" class="headerlink" title="判断是否ip地址"></a>判断是否ip地址</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_is_ip</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> patt = <span class="regexp">/^(\d&#123;1,2&#125;|1\d\d|2[0-4]\d|25[0-5])(\.(\d&#123;1,2&#125;|1\d\d|2[0-4]\d|25[0-5]))&#123;3&#125;$/</span>;</span><br><span class="line">    <span class="keyword">return</span> patt.test(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span>.prototype.format  = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;    </span><br><span class="line">    <span class="keyword">var</span> args = <span class="built_in">arguments</span>;    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.replace(<span class="regexp">/\&#123;(\d+)\&#125;/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">m,i</span>) </span>&#123;    </span><br><span class="line">        <span class="keyword">return</span> args[i];    </span><br><span class="line">    &#125;);    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandomInt</span>(<span class="params">min, max</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (max - min + <span class="number">1</span>)) + min;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打开新的tab"><a href="#打开新的tab" class="headerlink" title="打开新的tab"></a>打开新的tab</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.open(<span class="string">'www.yourdomain.com'</span>,<span class="string">'_blank'</span>);</span><br></pre></td></tr></table></figure><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.location = <span class="string">"http://www.yourdomain.com"</span>;</span><br></pre></td></tr></table></figure><h3 id="清除字符串两边空格"><a href="#清除字符串两边空格" class="headerlink" title="清除字符串两边空格"></a>清除字符串两边空格</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s = $.trim(s)</span><br></pre></td></tr></table></figure><h3 id="string转int"><a href="#string转int" class="headerlink" title="string转int"></a>string转int</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// parseInt(string, radix)</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="built_in">parseInt</span>(<span class="string">"1000"</span>, <span class="number">10</span>);</span><br><span class="line"><span class="comment">// 如果转换的不是数字，则会返回NaN，可以用isNaN(x)来判断</span></span><br><span class="line"><span class="comment">// 缺点：并且如果转换的字符串是 123abc，则会返回123</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 使用正则来转换</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">str2int</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( <span class="regexp">/^\s*(\+|-)?\d+\s*$/</span>.test(<span class="built_in">String</span>(x)) )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parseInt</span>(x, <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Number</span>.NaN;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ajax请求"><a href="#ajax请求" class="headerlink" title="ajax请求"></a>ajax请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    type: <span class="string">'POST'</span>,</span><br><span class="line">    url: url,</span><br><span class="line">    data: <span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">    contentType: <span class="string">"application/json"</span>,  <span class="comment">// 发送信息至服务器时内容编码类型</span></span><br><span class="line">    beforeSend: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 在发送请求之前调用，并且传入一个 XMLHttpRequest 作为参数。</span></span><br><span class="line">    &#125;,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">data, textStatus, jqXHR</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 当请求之后调用。传入返回后的数据，以及包含成功代码的字符串。</span></span><br><span class="line">    &#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span>(<span class="params">jqXHR, textStatus, errorThrown</span>) </span>&#123; <span class="comment">// if error occured</span></span><br><span class="line">        <span class="comment">// 在请求出错时调用。传入 XMLHttpRequest 对象，描述错误类型的字符串以及一个异常对象（如果有的话）</span></span><br><span class="line">        alert(jqXHR.statusText + jqXHR.responseText);</span><br><span class="line">    &#125;,</span><br><span class="line">    complete: <span class="function"><span class="keyword">function</span>(<span class="params">data|jqXHR, textStatus, jqXHR|errorThrown</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 当请求完成之后调用这个函数，无论成功或失败。传入 XMLHttpRequest 对象，以及一个包含成功或错误代码的字符串。</span></span><br><span class="line">    &#125;,</span><br><span class="line">    dataType: <span class="string">'json'</span>，        <span class="comment">//预期服务器返回的数据类型</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 增加项</span><br><span class="line">$(<span class="string">'select.input-channel'</span>).append($(<span class="string">'&lt;option&gt;'</span>, &#123;</span><br><span class="line">    value: <span class="string">"v"</span>,</span><br><span class="line">    text: <span class="string">"t"</span>,</span><br><span class="line">&#125;));</span><br><span class="line"> </span><br><span class="line"># 监测变化</span><br><span class="line">$(<span class="string">"#select-time-range"</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'change'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="交换两行"><a href="#交换两行" class="headerlink" title="交换两行"></a>交换两行</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"body"</span>).on(<span class="string">"click"</span>, <span class="string">".btn-index-down"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> trLength = $(<span class="string">".btn-index-down"</span>).length;</span><br><span class="line">    <span class="keyword">var</span> $tr = $(<span class="keyword">this</span>).parent().parent();</span><br><span class="line">    <span class="keyword">if</span> ($tr.index() != trLength - <span class="number">1</span>) &#123;</span><br><span class="line">        $tr.next().after($tr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">$(<span class="string">"body"</span>).on(<span class="string">"click"</span>, <span class="string">".btn-index-up"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $tr = $(<span class="keyword">this</span>).parent().parent();</span><br><span class="line">    <span class="keyword">if</span> ($tr.index() != <span class="number">0</span>) &#123;</span><br><span class="line">        $tr.prev().before($tr);<span class="comment">//在每个匹配的元素之前插入内容。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="动态生成的元素捕获事件"><a href="#动态生成的元素捕获事件" class="headerlink" title="动态生成的元素捕获事件"></a>动态生成的元素捕获事件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"body"</span>).on(<span class="string">"click"</span>, <span class="string">".result-table-th"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="js-转移html字符"><a href="#js-转移html字符" class="headerlink" title="js 转移html字符"></a>js 转移html字符</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> entityMap = &#123;</span><br><span class="line">  <span class="string">'&amp;'</span>: <span class="string">'&amp;amp;'</span>,</span><br><span class="line">  <span class="string">'&lt;'</span>: <span class="string">'&amp;lt;'</span>,</span><br><span class="line">  <span class="string">'&gt;'</span>: <span class="string">'&amp;gt;'</span>,</span><br><span class="line">  <span class="string">'"'</span>: <span class="string">'&amp;quot;'</span>,</span><br><span class="line">  <span class="string">"'"</span>: <span class="string">'&amp;#39;'</span>,</span><br><span class="line">  <span class="string">'/'</span>: <span class="string">'&amp;#x2F;'</span>,</span><br><span class="line">  <span class="string">'`'</span>: <span class="string">'&amp;#x60;'</span>,</span><br><span class="line">  <span class="string">'='</span>: <span class="string">'&amp;#x3D;'</span></span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escapeHtml</span> (<span class="params">string</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">String</span>(string).replace(<span class="regexp">/[&amp;&lt;&gt;"'`=\/]/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> entityMap[s];</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"<span class="selector-tag">Helvetica</span> <span class="selector-tag">Neue</span>",<span class="selector-tag">Roboto</span>,<span class="selector-tag">Arial</span>,"<span class="selector-tag">Droid</span> <span class="selector-tag">Sans</span>",<span class="selector-tag">sans-serif</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Qt设置渐变背景</title>
      <link href="/2018/05/20/Qt%E8%AE%BE%E7%BD%AE%E6%B8%90%E5%8F%98%E8%83%8C%E6%99%AF/"/>
      <url>/2018/05/20/Qt%E8%AE%BE%E7%BD%AE%E6%B8%90%E5%8F%98%E8%83%8C%E6%99%AF/</url>
      <content type="html"><![CDATA[<h3 id="qss"><a href="#qss" class="headerlink" title="qss"></a>qss</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-color</span>: <span class="selector-tag">qlineargradient</span>(<span class="selector-tag">spread</span><span class="selector-pseudo">:repeat</span>, <span class="selector-tag">x1</span>: 0, <span class="selector-tag">y1</span>: 0, <span class="selector-tag">x2</span>: 0, <span class="selector-tag">y2</span>: 1, <span class="selector-tag">stop</span>: 0<span class="selector-id">#2ba0d6</span>, <span class="selector-tag">stop</span>: 1 <span class="selector-id">#138abd</span>);</span><br></pre></td></tr></table></figure><h3 id="widget"><a href="#widget" class="headerlink" title="widget"></a>widget</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QLinearGradient <span class="title">linearGradient</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>)</span></span>;</span><br><span class="line">linearGradient.setColorAt(<span class="number">0.0</span>, Qt::green);</span><br><span class="line">linearGradient.setColorAt(<span class="number">1.0</span>, Qt::blue);</span><br><span class="line">QPalette pal;</span><br><span class="line">pal.setBrush(QPalette::Window, QBrush(linearGradient));</span><br><span class="line"><span class="comment">//设置背景自动填充</span></span><br><span class="line">ui-&gt;widget-&gt;setAutoFillBackground(<span class="literal">true</span>);</span><br><span class="line">ui-&gt;widget-&gt;setPalette(pal);</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> qt </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nginx配置https证书</title>
      <link href="/2018/05/20/nginx%E9%85%8D%E7%BD%AEhttps%E8%AF%81%E4%B9%A6/"/>
      <url>/2018/05/20/nginx%E9%85%8D%E7%BD%AEhttps%E8%AF%81%E4%B9%A6/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#upstream mysvr &#123;</span><br><span class="line">#    server 127.0.0.1:8099 weight=1;  </span><br><span class="line">#    server 127.0.0.1:8099 weight=1;</span><br><span class="line">#&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    server_name example.com;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    ssl_certificate     /home/stat/example.com/cert/example.com.crt;</span><br><span class="line">    ssl_certificate_key /home/stat/example.com/cert/ca.example.com.key;</span><br><span class="line">    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    ssl_session_timeout  5m;</span><br><span class="line">    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    ssl_prefer_server_ciphers  on;</span><br><span class="line">    log_format  example_log &apos;[$time_local] $remote_addr &quot;$request&quot; &apos;</span><br><span class="line">                        &apos;$status $upstream_status $body_bytes_sent $request_time $upstream_response_time &apos;</span><br><span class="line">                        &apos;&quot;$remote_user&quot; &quot;$http_user_agent&quot; &quot;$http_referer&quot;&apos;;</span><br><span class="line">    access_log /var/www/example/nginxlog/access.log example_log;</span><br><span class="line">    error_log  /var/www/example/nginxlog/error.log;</span><br><span class="line">    gzip on;</span><br><span class="line">    location ~ ^/static/ &#123;</span><br><span class="line">        root /var/www/example;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123;        </span><br><span class="line">        proxy_set_header    Host    $host;</span><br><span class="line">        proxy_set_header    X-REAL-IP   $remote_addr;</span><br><span class="line">        proxy_set_header    X-FORWARDED-FOR $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_ignore_client_abort on;</span><br><span class="line">        #proxy_pass  http://mysvr;</span><br><span class="line">        proxy_pass http://127.0.0.1:8099;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql数据库设置</title>
      <link href="/2018/05/20/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E7%BD%AE/"/>
      <url>/2018/05/20/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u用户名 -p旧密码 password 新密码</span><br></pre></td></tr></table></figure><h3 id="备份还原数据库"><a href="#备份还原数据库" class="headerlink" title="备份还原数据库"></a>备份还原数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置从特定地址的服务器导出数据, 缺省主机是localhost, 则设置参数-h 或 --host=</span></span><br><span class="line"><span class="comment"># 备份所有数据库:</span></span><br><span class="line">mysqldump -u root -p123  --all-database  &gt;  test.sql</span><br><span class="line"><span class="comment"># 备份数据库test</span></span><br><span class="line">mysqldump -u root -p123  dbname &gt;  dbname.$(date <span class="string">"+%Y-%m-%d"</span>).sql</span><br><span class="line"><span class="comment"># 备份数据库test下的temp表:</span></span><br><span class="line">mysqldump -u root -p123  <span class="built_in">test</span> demp &gt;  test.sql</span><br><span class="line"><span class="comment"># 还原数据库test</span></span><br><span class="line">mysqldump -u root -p123  <span class="built_in">test</span>  &lt;  test.sql</span><br><span class="line"><span class="comment"># 还原数据库test下的temp表:</span></span><br><span class="line">mysqldump -u root -p123  <span class="built_in">test</span> demp &lt; test.sql</span><br><span class="line"><span class="comment"># 但是有时候这样还原不了，那就进入mysql控制台，使用命令：</span></span><br><span class="line"><span class="built_in">source</span> test.sql</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="权限设置，会自动创建账号"><a href="#权限设置，会自动创建账号" class="headerlink" title="权限设置，会自动创建账号"></a>权限设置，会自动创建账号</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 授权</span><br><span class="line"><span class="keyword">grant</span> all <span class="keyword">on</span> dbname.* <span class="keyword">to</span> username@<span class="string">'192.168.0.10'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'passwd'</span>;</span><br><span class="line"># 删除权限</span><br><span class="line"><span class="keyword">revoke</span> all <span class="keyword">on</span> dbname.* <span class="keyword">from</span> username@<span class="string">'192.168.0.10'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'passwd'</span>;</span><br><span class="line"># 刷新权限</span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure><h3 id="编码设置"><a href="#编码设置" class="headerlink" title="编码设置"></a>编码设置</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> character_set_client=utf8;</span><br><span class="line"><span class="keyword">set</span> character_set_connection=utf8;</span><br><span class="line"><span class="keyword">set</span> character_set_database=utf8;</span><br><span class="line"><span class="keyword">set</span> character_set_results=utf8;</span><br><span class="line"><span class="keyword">set</span> character_set_server=utf8;</span><br></pre></td></tr></table></figure><h3 id="数据库及表转换成utf编码"><a href="#数据库及表转换成utf编码" class="headerlink" title="数据库及表转换成utf编码"></a>数据库及表转换成utf编码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 转换</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">convert</span> <span class="keyword">to</span> <span class="built_in">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"># 和上面的不同，这个应该是设置编码</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> database_name <span class="built_in">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="built_in">character</span> <span class="keyword">set</span> utf8;</span><br></pre></td></tr></table></figure><h3 id="创建时指定编码"><a href="#创建时指定编码" class="headerlink" title="创建时指定编码"></a>创建时指定编码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 创建数据库</span><br><span class="line"># create database name character set utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">'test2'</span> <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci</span><br><span class="line"># 创建表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">'table1'</span> (</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> auto_increment,</span><br><span class="line"><span class="string">`flag_deleted`</span> enum(<span class="string">'Y'</span>,<span class="string">'N'</span>) <span class="built_in">character</span> <span class="keyword">set</span> utf8 <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="string">'N'</span>,</span><br><span class="line"><span class="string">`flag_type`</span> <span class="built_in">int</span>(<span class="number">5</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="string">'0'</span>,</span><br><span class="line"><span class="string">`type_name`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="built_in">character</span> <span class="keyword">set</span> utf8 <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="string">''</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">)  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><h3 id="查看字符编码"><a href="#查看字符编码" class="headerlink" title="查看字符编码"></a>查看字符编码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span><span class="string">'character_set_%'</span>;</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span><span class="string">'collation_%'</span>;</span><br></pre></td></tr></table></figure><h3 id="数据库设置"><a href="#数据库设置" class="headerlink" title="数据库设置"></a>数据库设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 找到客户端配置[client] 在下面添加</span><br><span class="line">default-character-set=utf8 #默认字符集为utf8</span><br><span class="line"># 在找到[mysqld] 添加</span><br><span class="line">character-set-server=utf8 #默认字符集为utf8</span><br><span class="line">init-connect=&apos;SET NAMES utf8&apos;#（设定连接mysql数据库时使用utf8编码，以让mysql数据库为utf8运行）</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>gunicorn配置 </title>
      <link href="/2018/05/20/gunicorn%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/05/20/gunicorn%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gunicorn --workers=4 mysite.wsgi:application</span><br><span class="line">     --<span class="built_in">bind</span>=127.0.0.1:8000 </span><br><span class="line">     --<span class="built_in">bind</span>=[::1]:8000</span><br><span class="line">     --worker-class=gevent </span><br><span class="line">     --worker-connections=1000</span><br><span class="line">     --env DJANGO_SETTINGS_MODULE=myproject.settings.main</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows10创建wifi热点 </title>
      <link href="/2018/05/20/windows10%E5%88%9B%E5%BB%BAwifi%E7%83%AD%E7%82%B9/"/>
      <url>/2018/05/20/windows10%E5%88%9B%E5%BB%BAwifi%E7%83%AD%E7%82%B9/</url>
      <content type="html"><![CDATA[<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netsh wlan <span class="built_in">set</span> hostednetwork mode=allow ssid=wifiname key=12345678</span><br><span class="line">netsh wlan start hostednetwork</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="设置联网"><a href="#设置联网" class="headerlink" title="设置联网"></a>设置联网</h3><ul><li>a.在“网络连接”界面中，右击“宽带连接”或“本地连接”图标，从弹出的右键菜单中选择“属性”项</li><li>b.此时将打开“属性”界面，切换到“共享”选项卡</li><li>c.勾选“允许其它网络用户通过此计算机的Internet连接来连接”项</li><li>d.同时从家庭网络连接下拉列表中选择“本地连接*1”（即新创建的WiFi热点），点击“确定”完成设置<h3 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh wlan <span class="built_in">set</span> hostednetwork mode=disallow</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>查看进程IO</title>
      <link href="/2018/05/20/%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8BIO/"/>
      <url>/2018/05/20/%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8BIO/</url>
      <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pidstat -dl 2</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>grep</title>
      <link href="/2018/05/20/grep/"/>
      <url>/2018/05/20/grep/</url>
      <content type="html"><![CDATA[<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -C 2 abc app.log</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="主要参数"><a href="#主要参数" class="headerlink" title="主要参数"></a>主要参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-c: 只输出匹配行的计数</span><br><span class="line">-I: 不区分大 小写(只适用于单字符)</span><br><span class="line">-h: 查询多文件时不显示文件名</span><br><span class="line">-l: 查询多文件时只输出包含匹配字符的文件名</span><br><span class="line">-n: 显示匹配行及 行号</span><br><span class="line">-s: 不显示不存在或无匹配文本的错误信息</span><br><span class="line">-v: 显示不包含匹配文本的所有行</span><br><span class="line">-C: 显示上下文多少行</span><br></pre></td></tr></table></figure><h3 id="pattern正则表达式主要参数"><a href="#pattern正则表达式主要参数" class="headerlink" title="pattern正则表达式主要参数"></a>pattern正则表达式主要参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\:  忽略正则表达式中特殊字符的原有含义</span><br><span class="line">^: 匹配正则表达式的开始行</span><br><span class="line">$: 匹配正则表达式的结束行</span><br><span class="line">\&lt;: 从匹配正则表达 式的行开始</span><br><span class="line">\&gt;: 到匹配正则表达式的行结束</span><br><span class="line">[ ]: 单个字符，如[A]即A符合要求</span><br><span class="line">[ - ]: 范围，如[A-Z]，即A、B、C一直到Z都符合要求</span><br><span class="line">.: 所有的单个字符。</span><br><span class="line">* : 有字符，长度可以为0</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>supervisor配置</title>
      <link href="/2018/05/20/Untitled/"/>
      <url>/2018/05/20/Untitled/</url>
      <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install supervisor</span><br></pre></td></tr></table></figure><h3 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo_supervisord_conf &gt; /home/<span class="built_in">stat</span>/venv/web/etc/supervisord.conf</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="配置gunicorn的运行程序"><a href="#配置gunicorn的运行程序" class="headerlink" title="配置gunicorn的运行程序"></a>配置gunicorn的运行程序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[program:myapp]</span><br><span class="line">command=/home/stat/venv/web/bin/gunicorn -w4 -b0.0.0.0:2170 myapp:app</span><br><span class="line">directory=/path/myproject</span><br><span class="line">autorestart=true</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>指定配置文件则加上 -c supervisord.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过配置文件启动supervisor</span></span><br><span class="line">supervisord</span><br><span class="line"><span class="comment"># 察看supervisor的状态</span></span><br><span class="line">supervisorctl status</span><br><span class="line"><span class="comment"># 重新载入配置文件</span></span><br><span class="line">supervisorctl reload</span><br><span class="line"><span class="comment"># 启动指定/所有supervisor管理的程序进程</span></span><br><span class="line">supervisorctl start [all]|[appname]</span><br><span class="line"><span class="comment"># 关闭指定/所有 supervisor管理的程序进程</span></span><br><span class="line">supervisorctl stop [all]|[appname]</span><br></pre></td></tr></table></figure></p><h3 id="web管理界面-需要激活"><a href="#web管理界面-需要激活" class="headerlink" title="web管理界面(需要激活)"></a>web管理界面(需要激活)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[inet_http_server]        ; inet (TCP) server disabled by default</span><br><span class="line">port=127.0.0.1:9001       ; (ip_address:port specifier, *:port for all iface)</span><br><span class="line">username=user          ; (default is no username (open server))</span><br><span class="line">password=123           ; (default is no password (open server))</span><br><span class="line"> </span><br><span class="line">[supervisorctl]</span><br><span class="line">serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket</span><br><span class="line">serverurl=http://127.0.0.1:9001       ; use an http:// url to specify an inet socket</span><br><span class="line">username=user             ; should be same as http_username if set</span><br><span class="line">password=123              ; should be same as http_password if set</span><br><span class="line">;prompt=mysupervisor          ; cmd line prompt (default &quot;supervisor&quot;)</span><br><span class="line">;history_file=~/.sc_history          ; use readline history if available</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux设置虚拟内存 </title>
      <link href="/2018/05/20/Untitled-1/"/>
      <url>/2018/05/20/Untitled-1/</url>
      <content type="html"><![CDATA[<h3 id="决定修改swap大小"><a href="#决定修改swap大小" class="headerlink" title="决定修改swap大小"></a>决定修改swap大小</h3><p>首先在空间合适处创建用于分区的swap文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/swap/swap bs=1024 count=4194304</span><br></pre></td></tr></table></figure></p><h3 id="将目的文件设置为swap分区文件"><a href="#将目的文件设置为swap分区文件" class="headerlink" title="将目的文件设置为swap分区文件"></a>将目的文件设置为swap分区文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkswap /swap/swap</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="激活swap，立即启用交换分区文件"><a href="#激活swap，立即启用交换分区文件" class="headerlink" title="激活swap，立即启用交换分区文件"></a>激活swap，立即启用交换分区文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon /swap/swap</span><br></pre></td></tr></table></figure><h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br></pre></td></tr></table></figure><h3 id="开机时自启用"><a href="#开机时自启用" class="headerlink" title="开机时自启用"></a>开机时自启用</h3><p>修改文件/etc/fstab中的swap行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/swap/swap  swap  swap  defaults  0 0</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用virtualenv隔离python环境</title>
      <link href="/2018/05/19/test/"/>
      <url>/2018/05/19/test/</url>
      <content type="html"><![CDATA[<h3 id="安装virtualenv"><a href="#安装virtualenv" class="headerlink" title="安装virtualenv"></a>安装virtualenv</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python-virtualenv</span><br></pre></td></tr></table></figure><h3 id="安装扩展包，Virtaulenvwrapper是virtualenv的扩展包，用于更方便管理虚拟环境"><a href="#安装扩展包，Virtaulenvwrapper是virtualenv的扩展包，用于更方便管理虚拟环境" class="headerlink" title="安装扩展包，Virtaulenvwrapper是virtualenv的扩展包，用于更方便管理虚拟环境"></a>安装扩展包，Virtaulenvwrapper是virtualenv的扩展包，用于更方便管理虚拟环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenvwrapper</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="设置环境，在-bashrc中添加"><a href="#设置环境，在-bashrc中添加" class="headerlink" title="设置环境，在~/.bashrc中添加"></a>设置环境，在~/.bashrc中添加</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /usr/<span class="built_in">local</span>/bin/virtualenvwrapper.sh</span><br></pre></td></tr></table></figure><p>设置完后要运行一次：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /usr/<span class="built_in">local</span>/bin/virtualenvwrapper.sh</span><br></pre></td></tr></table></figure></p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个tmp的环境</span></span><br><span class="line">mkvirtualenv tmp</span><br><span class="line"><span class="comment">#切换到tmp的环境</span></span><br><span class="line">workon tmp</span><br><span class="line"><span class="comment">#退出环境</span></span><br><span class="line">deactivate</span><br><span class="line"><span class="comment">#移除虚拟环境tmp</span></span><br><span class="line">rmvirtualenv tmp</span><br></pre></td></tr></table></figure><h3 id="uwsgi中配置使用virtualenv中安装的包："><a href="#uwsgi中配置使用virtualenv中安装的包：" class="headerlink" title="uwsgi中配置使用virtualenv中安装的包："></a>uwsgi中配置使用virtualenv中安装的包：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#只要告诉uwsgi，virtualenv创建的虚拟目录路径</span></span><br><span class="line">virtualenv=/home/tmpuser/.virtualenvs/tmp</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/19/hello-world/"/>
      <url>/2018/05/19/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
